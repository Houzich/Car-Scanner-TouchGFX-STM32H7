#include <touchgfx/Font.hpp>

FONT_KERNING_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_calibri_56_4bpp[] FONT_KERNING_LOCATION_FLASH_ATTRIBUTE = {
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0046, -6 },  // (First char = [0x0046, F], Second char = [0x002C, ,], Kerning dist = -6)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002C, ,], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x002D, -], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x002D, -], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0046, -5 },  // (First char = [0x0046, F], Second char = [0x002E, .], Kerning dist = -5)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x002E, .], Kerning dist = -1)
    { 0x0046, -2 },  // (First char = [0x0046, F], Second char = [0x002F, /], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x003F, ?], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x0041, A], Kerning dist = -3)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0041, A], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0041, A], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0043, C], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0043, C], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0043, C], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0047, G], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0047, G], Kerning dist = -2)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0047, G], Kerning dist = -1)
    { 0x0041,  1 },  // (First char = [0x0041, A], Second char = [0x004A, J], Kerning dist = 1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0046, -3 },  // (First char = [0x0046, F], Second char = [0x004A, J], Kerning dist = -3)
    { 0x004C,  1 },  // (First char = [0x004C, L], Second char = [0x004A, J], Kerning dist = 1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x004A, J], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x004F, O], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x004F, O], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x004F, O], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0051, Q], Kerning dist = -3)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0051, Q], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0053, S], Kerning dist = -1)
    { 0x0041, -4 },  // (First char = [0x0041, A], Second char = [0x0054, T], Kerning dist = -4)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0054, T], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0054, T], Kerning dist = -4)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0054, T], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0055, U], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0055, U], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0055, U], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0056, V], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0056, V], Kerning dist = -1)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x0056, V], Kerning dist = -4)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0056, V], Kerning dist = -1)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x0057, W], Kerning dist = -2)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0057, W], Kerning dist = -1)
    { 0x004C, -3 },  // (First char = [0x004C, L], Second char = [0x0057, W], Kerning dist = -3)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0057, W], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0058, X], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004A, -1 },  // (First char = [0x004A, J], Second char = [0x0058, X], Kerning dist = -1)
    { 0x004F, -2 },  // (First char = [0x004F, O], Second char = [0x0058, X], Kerning dist = -2)
    { 0x0041, -4 },  // (First char = [0x0041, A], Second char = [0x0059, Y], Kerning dist = -4)
    { 0x0042, -2 },  // (First char = [0x0042, B], Second char = [0x0059, Y], Kerning dist = -2)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x004C, -5 },  // (First char = [0x004C, L], Second char = [0x0059, Y], Kerning dist = -5)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x0059, Y], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0044, -1 },  // (First char = [0x0044, D], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x004F, -1 },  // (First char = [0x004F, O], Second char = [0x005A, Z], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0061, a], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0061, a], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0063, c], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0063, c], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0064, d], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0064, d], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0065, e], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0065, e], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0066, f], Kerning dist = -1)
    { 0x0045, -2 },  // (First char = [0x0045, E], Second char = [0x0066, f], Kerning dist = -2)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0066, f], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0066, f], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006D, m], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006E, n], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x006F, o], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x006F, o], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x006F, o], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0070, p], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0071, q], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0071, q], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0071, q], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0072, r], Kerning dist = -1)
    { 0x0046, -1 },  // (First char = [0x0046, F], Second char = [0x0073, s], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0074, t], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004C, -1 },  // (First char = [0x004C, L], Second char = [0x0074, t], Kerning dist = -1)
    { 0x004B, -1 },  // (First char = [0x004B, K], Second char = [0x0075, u], Kerning dist = -1)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0076, v], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0076, v], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0076, v], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0076, v], Kerning dist = -2)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0077, w], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0077, w], Kerning dist = -1)
    { 0x004B, -3 },  // (First char = [0x004B, K], Second char = [0x0077, w], Kerning dist = -3)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0077, w], Kerning dist = -2)
    { 0x0041, -1 },  // (First char = [0x0041, A], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0042, -1 },  // (First char = [0x0042, B], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0045, -1 },  // (First char = [0x0045, E], Second char = [0x0079, y], Kerning dist = -1)
    { 0x0047, -1 },  // (First char = [0x0047, G], Second char = [0x0079, y], Kerning dist = -1)
    { 0x004B, -2 },  // (First char = [0x004B, K], Second char = [0x0079, y], Kerning dist = -2)
    { 0x004C, -2 },  // (First char = [0x004C, L], Second char = [0x0079, y], Kerning dist = -2)
    { 0x0041, -2 },  // (First char = [0x0041, A], Second char = [0x201D, ], Kerning dist = -2)
    { 0x0043,  2 },  // (First char = [0x0043, C], Second char = [0x201D, ], Kerning dist = 2)
    { 0x004C, -4 },  // (First char = [0x004C, L], Second char = [0x201D, ], Kerning dist = -4)
};
