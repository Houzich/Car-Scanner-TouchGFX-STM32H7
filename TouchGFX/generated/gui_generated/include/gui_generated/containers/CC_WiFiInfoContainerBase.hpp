/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CC_WIFIINFOCONTAINERBASE_HPP
#define CC_WIFIINFOCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/containers/buttons/Buttons.hpp>
#include <touchgfx/widgets/TextArea.hpp>

class CC_WiFiInfoContainerBase : public touchgfx::Container
{
public:
    CC_WiFiInfoContainerBase();
    virtual ~CC_WiFiInfoContainerBase() {}
    virtual void initialize();

    /*
     * Virtual Action Handlers
     */
    virtual void elementSelected()
    {
        // Override and implement this function in CC_WiFiInfoContainer
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Member Declarations
     */
    touchgfx::Box box_Background;
    touchgfx::TextAreaWithOneWildcard textAreaEncryption;
    touchgfx::TextAreaWithOneWildcard textAreaWiFiSSID;
    touchgfx::Image imageSignalStrengthIcon;
    touchgfx::BoxWithBorderButtonStyle< touchgfx::ClickButtonTrigger > flexButtonOverlay;
    touchgfx::TextArea textAreaConnected;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREAENCRYPTION_SIZE = 40;
    touchgfx::Unicode::UnicodeChar textAreaEncryptionBuffer[TEXTAREAENCRYPTION_SIZE];
    static const uint16_t TEXTAREAWIFISSID_SIZE = 40;
    touchgfx::Unicode::UnicodeChar textAreaWiFiSSIDBuffer[TEXTAREAWIFISSID_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CC_WiFiInfoContainerBase, const touchgfx::AbstractButtonContainer&> flexButtonCallback;

    /*
     * Callback Handler Declarations
     */
    void flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src);

};

#endif // CC_WIFIINFOCONTAINERBASE_HPP
