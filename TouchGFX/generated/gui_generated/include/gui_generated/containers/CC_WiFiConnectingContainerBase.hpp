/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef CC_WIFICONNECTINGCONTAINERBASE_HPP
#define CC_WIFICONNECTINGCONTAINERBASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <touchgfx/containers/Container.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithLabel.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class CC_WiFiConnectingContainerBase : public touchgfx::Container
{
public:
    CC_WiFiConnectingContainerBase();
    virtual ~CC_WiFiConnectingContainerBase() {}
    virtual void initialize();

    /*
     * Custom Trigger Callback Setters
     */
    void setWiFiRetryPressedCallback(touchgfx::GenericCallback<>& callback)
    {
        this->WiFiRetryPressedCallback = &callback;
    }

protected:
    FrontendApplication& application() {
        return *static_cast<FrontendApplication*>(touchgfx::Application::getInstance());
    }

    /*
     * Custom Trigger Emitters
     */
    virtual void emitWiFiRetryPressedCallback()
    {
        if (WiFiRetryPressedCallback && WiFiRetryPressedCallback->isValid())
        {
            this->WiFiRetryPressedCallback->execute();
        }
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image_GradientBG;
    touchgfx::ButtonWithLabel buttonWithLabel_WiFiRetry;
    touchgfx::TextArea textArea_WiFiConnectionStatus2;
    touchgfx::TextArea textArea_WiFiConnectionStatus1;
    touchgfx::Image image_Error;
    touchgfx::TextAreaWithOneWildcard textArea_Connecting;
    touchgfx::Image image_Connecting;
    touchgfx::TextArea textArea_ConnectingEstablished;

    /*
     * Wildcard Buffers
     */
    static const uint16_t TEXTAREA_CONNECTING_SIZE = 5;
    touchgfx::Unicode::UnicodeChar textArea_ConnectingBuffer[TEXTAREA_CONNECTING_SIZE];

private:

    /*
     * Callback Declarations
     */
    touchgfx::Callback<CC_WiFiConnectingContainerBase, const touchgfx::AbstractButton&> buttonCallback;

    /*
     * Custom Trigger Callback Declarations
     */
    touchgfx::GenericCallback<>* WiFiRetryPressedCallback;

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

};

#endif // CC_WIFICONNECTINGCONTAINERBASE_HPP
