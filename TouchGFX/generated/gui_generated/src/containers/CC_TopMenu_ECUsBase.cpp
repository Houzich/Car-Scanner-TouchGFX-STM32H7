/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/containers/CC_TopMenu_ECUsBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

CC_TopMenu_ECUsBase::CC_TopMenu_ECUsBase() :
    buttonCallback(this, &CC_TopMenu_ECUsBase::buttonCallbackHandler),
    trigger_ToUserCallback(0),
    trigger_SaveCallback(0),
    trigger_DeleteErrCallback(0)
{
    setWidth(719);
    setHeight(80);
    button_ToUser.setXY(510, 10);
    button_ToUser.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_TOUSER_ID), touchgfx::Bitmap(BITMAP_BUTTON_TOUSER_S_ID));
    button_ToUser.setAction(buttonCallback);

    button_Save.setXY(585, 10);
    button_Save.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_SAVE_ID), touchgfx::Bitmap(BITMAP_BUTTON_SAVE_S_ID));
    button_Save.setAction(buttonCallback);

    button_DeleteErr.setXY(650, 10);
    button_DeleteErr.setBitmaps(touchgfx::Bitmap(BITMAP_BUTTON_DELETEERR_ID), touchgfx::Bitmap(BITMAP_BUTTON_DELETEERR_ID));
    button_DeleteErr.setAction(buttonCallback);

    textArea_Path.setPosition(30, 28, 450, 25);
    textArea_Path.setColor(touchgfx::Color::getColorFromRGB(255, 255, 255));
    textArea_Path.setLinespacing(0);
    textArea_Path.setTypedText(touchgfx::TypedText(T_RESOURCEIDVALUELEFT));

    add(button_ToUser);
    add(button_Save);
    add(button_DeleteErr);
    add(textArea_Path);
}

void CC_TopMenu_ECUsBase::initialize()
{

}

void CC_TopMenu_ECUsBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &button_ToUser)
    {
        //ToUser
        //When button_ToUser clicked emit trigger_ToUser callback
        //Emit callback
        emitTrigger_ToUserCallback();
    }
    else if (&src == &button_Save)
    {
        //Save
        //When button_Save clicked emit trigger_Save callback
        //Emit callback
        emitTrigger_SaveCallback();
    }
    else if (&src == &button_DeleteErr)
    {
        //DeleteErr
        //When button_DeleteErr clicked emit trigger_DeleteErr callback
        //Emit callback
        emitTrigger_DeleteErrCallback();
    }
}

