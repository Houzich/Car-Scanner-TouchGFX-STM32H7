/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/settings_screen/SettingsViewBase.hpp>
#include <touchgfx/Color.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>

SettingsViewBase::SettingsViewBase() :
    flexButtonCallback(this, &SettingsViewBase::flexButtonCallbackHandler),
    cC_LeftMenu1Trigger_BackCallback(this, &SettingsViewBase::cC_LeftMenu1Trigger_BackCallbackHandler)
{

    __background.setPosition(0, 0, 800, 480);
    __background.setColor(touchgfx::Color::getColorFromRGB(0, 0, 0));

    flexButton_Settings.setIconBitmaps(Bitmap(BITMAP_BUTTON_SETTINGS_239X239_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_Settings.setIconXY(0, 0);
    flexButton_Settings.setText(TypedText(T_SINGLEUSEID33));
    flexButton_Settings.setTextPosition(0, 170, 239, 239);
    flexButton_Settings.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_Settings.setPosition(560, 0, 239, 239);
    flexButton_Settings.setAction(flexButtonCallback);

    cC_LeftMenu1.setXY(0, 0);
    cC_LeftMenu1.setTrigger_BackCallback(cC_LeftMenu1Trigger_BackCallback);

    flexButton_User_Data.setIconBitmaps(Bitmap(BITMAP_BUTTON_USER_DATA_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_User_Data.setIconXY(0, 0);
    flexButton_User_Data.setText(TypedText(T_SINGLEUSEID34));
    flexButton_User_Data.setTextPosition(0, 170, 239, 239);
    flexButton_User_Data.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_User_Data.setPosition(319, 0, 239, 239);

    flexButton_Support.setIconBitmaps(Bitmap(BITMAP_BUTTON_SUPPORT_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_Support.setIconXY(0, 0);
    flexButton_Support.setText(TypedText(T_SINGLEUSEID35));
    flexButton_Support.setTextPosition(0, 170, 239, 239);
    flexButton_Support.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_Support.setPosition(80, 239, 239, 239);

    flexButton_Information.setIconBitmaps(Bitmap(BITMAP_BUTTON_INFORMATION_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_Information.setIconXY(0, 0);
    flexButton_Information.setText(TypedText(T_SINGLEUSEID36));
    flexButton_Information.setTextPosition(0, 170, 239, 239);
    flexButton_Information.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_Information.setPosition(319, 240, 239, 239);

    flexButton_Update.setIconBitmaps(Bitmap(BITMAP_BUTTON_UPDATE_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_Update.setIconXY(0, 0);
    flexButton_Update.setText(TypedText(T_SINGLEUSEID37));
    flexButton_Update.setTextPosition(0, 170, 239, 239);
    flexButton_Update.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_Update.setPosition(560, 240, 239, 239);

    flexButton_WiFi.setIconBitmaps(Bitmap(BITMAP_BUTTON_WIFI_ID), Bitmap(BITMAP_BUTTON_LIGHT_SELECTOR_239X239_ID));
    flexButton_WiFi.setIconXY(0, 0);
    flexButton_WiFi.setText(TypedText(T_SINGLEUSEID38));
    flexButton_WiFi.setTextPosition(0, 170, 239, 239);
    flexButton_WiFi.setTextColors(touchgfx::Color::getColorFromRGB(255, 255, 255), touchgfx::Color::getColorFromRGB(10, 10, 10));
    flexButton_WiFi.setPosition(80, 0, 239, 239);
    flexButton_WiFi.setAction(flexButtonCallback);

    add(__background);
    add(flexButton_Settings);
    add(cC_LeftMenu1);
    add(flexButton_User_Data);
    add(flexButton_Support);
    add(flexButton_Information);
    add(flexButton_Update);
    add(flexButton_WiFi);
}

void SettingsViewBase::setupScreen()
{
    cC_LeftMenu1.initialize();
}

void SettingsViewBase::cC_LeftMenu1Trigger_BackCallbackHandler()
{
    //Button_Back_Clicked
    //When cC_LeftMenu1 trigger_Back change screen to CarBrands
    //Go to CarBrands with no screen transition
    application().gotoCarBrandsScreenNoTransition();
}

void SettingsViewBase::flexButtonCallbackHandler(const touchgfx::AbstractButtonContainer& src)
{
    if (&src == &flexButton_Settings)
    {
        //Button_Settings_Clicked
        //When flexButton_Settings clicked change screen to Display
        //Go to Display with no screen transition
        application().gotoDisplayScreenNoTransition();
    }
    else if (&src == &flexButton_WiFi)
    {
        //Button_WiFi_Clicked
        //When flexButton_WiFi clicked change screen to WiFiConnecting
        //Go to WiFiConnecting with no screen transition
        application().gotoWiFiConnectingScreenNoTransition();
    }
}
