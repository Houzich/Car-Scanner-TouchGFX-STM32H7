; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\build\Debug\obj\Table_ariblk_25_4bpp.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	?glyphs_ariblk_25_4bpp@@3QBUGlyphNode@touchgfx@@B ; glyphs_ariblk_25_4bpp
PUBLIC	?unicodes_ariblk_25_4bpp@@3QBQBEB		; unicodes_ariblk_25_4bpp
EXTRN	?unicodes_ariblk_25_4bpp_0@@3QBEB:BYTE		; unicodes_ariblk_25_4bpp_0
EXTRN	?unicodes_ariblk_25_4bpp_4@@3QBEB:BYTE		; unicodes_ariblk_25_4bpp_4
msvcjmc	SEGMENT
__EBE8CD87_Types@hpp DB 01H
__4A756E09_Unicode@hpp DB 01H
__6F04AFDB_Font@hpp DB 01H
__273908D5_ConstFont@hpp DB 01H
__3F3F6DE8_GeneratedFont@hpp DB 01H
__271F0C62_Table_ariblk_25_4bpp@cpp DB 01H
msvcjmc	ENDS
CONST	SEGMENT
?glyphs_ariblk_25_4bpp@@3QBUGlyphNode@touchgfx@@B DD 00H ; glyphs_ariblk_25_4bpp
	DW	020H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	08H
	DB	00H
	DB	01H
	DB	00H
	DD	00H
	DW	021H
	DB	06H
	DB	012H
	DB	012H
	DB	01H
	DB	08H
	DB	01H
	DB	01H
	DB	00H
	DD	036H
	DW	022H
	DB	0cH
	DB	07H
	DB	012H
	DB	00H
	DB	0dH
	DB	00H
	DB	00H
	DB	00H
	DD	060H
	DW	023H
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0f0H
	DW	024H
	DB	010H
	DB	016H
	DB	013H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	01a0H
	DW	025H
	DB	017H
	DB	013H
	DB	012H
	DB	01H
	DB	019H
	DB	00H
	DB	00H
	DB	00H
	DD	0284H
	DW	026H
	DB	014H
	DB	012H
	DB	012H
	DB	01H
	DB	016H
	DB	00H
	DB	00H
	DB	00H
	DD	0338H
	DW	027H
	DB	05H
	DB	07H
	DB	012H
	DB	01H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DD	034dH
	DW	028H
	DB	08H
	DB	017H
	DB	012H
	DB	01H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	03a9H
	DW	029H
	DB	08H
	DB	017H
	DB	012H
	DB	01H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	0405H
	DW	02aH
	DB	0aH
	DB	09H
	DB	012H
	DB	02H
	DB	0eH
	DB	00H
	DB	00H
	DB	00H
	DD	0432H
	DW	02bH
	DB	0eH
	DB	0eH
	DB	010H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0494H
	DW	02cH
	DB	06H
	DB	0aH
	DB	05H
	DB	01H
	DB	08H
	DB	02H
	DB	0fH
	DB	00H
	DD	04b2H
	DW	02dH
	DB	08H
	DB	04H
	DB	09H
	DB	00H
	DB	08H
	DB	011H
	DB	03H
	DB	00H
	DD	04c2H
	DW	02eH
	DB	06H
	DB	05H
	DB	05H
	DB	01H
	DB	08H
	DB	014H
	DB	0eH
	DB	00H
	DD	04d1H
	DW	02fH
	DB	07H
	DB	012H
	DB	012H
	DB	00H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DD	0519H
	DW	030H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	05a9H
	DW	031H
	DB	0bH
	DB	012H
	DB	012H
	DB	02H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0615H
	DW	032H
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	06a5H
	DW	033H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0735H
	DW	034H
	DB	011H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	07d7H
	DW	035H
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0867H
	DW	036H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	08f7H
	DW	037H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0987H
	DW	038H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0a17H
	DW	039H
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0aa7H
	DW	03aH
	DB	06H
	DB	0dH
	DB	0dH
	DB	01H
	DB	08H
	DB	022H
	DB	04H
	DB	00H
	DD	0aceH
	DW	03bH
	DB	06H
	DB	012H
	DB	0dH
	DB	01H
	DB	08H
	DB	026H
	DB	04H
	DB	00H
	DD	0b04H
	DW	03cH
	DB	0fH
	DB	0fH
	DB	010H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0b7cH
	DW	03dH
	DB	0eH
	DB	0aH
	DB	0eH
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0bc2H
	DW	03eH
	DB	0fH
	DB	010H
	DB	011H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0c42H
	DW	03fH
	DB	0fH
	DB	012H
	DB	012H
	DB	00H
	DB	0fH
	DB	02aH
	DB	01H
	DB	00H
	DD	0cd2H
	DW	040H
	DB	014H
	DB	015H
	DB	012H
	DB	0ffH
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DD	0da4H
	DW	041H
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	013H
	DB	02bH
	DB	09H
	DB	00H
	DD	0e58H
	DW	042H
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DD	0efaH
	DW	043H
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	013H
	DB	034H
	DB	05H
	DB	00H
	DD	0f9cH
	DW	044H
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DD	0103eH
	DW	045H
	DB	010H
	DB	012H
	DB	012H
	DB	01H
	DB	012H
	DB	00H
	DB	00H
	DB	00H
	DD	010ceH
	DW	046H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0115eH
	DW	047H
	DB	013H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	039H
	DB	05H
	DB	00H
	DD	01212H
	DW	048H
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	00H
	DB	00H
	DB	00H
	DD	012b4H
	DW	049H
	DB	06H
	DB	012H
	DB	012H
	DB	02H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	012eaH
	DW	04aH
	DB	0fH
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	0137aH
	DW	04bH
	DB	014H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	00H
	DB	00H
	DB	00H
	DD	0142eH
	DW	04cH
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	014beH
	DW	04dH
	DB	015H
	DB	012H
	DB	012H
	DB	01H
	DB	018H
	DB	00H
	DB	00H
	DB	00H
	DD	01584H
	DW	04eH
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	00H
	DB	00H
	DB	00H
	DD	01626H
	DW	04fH
	DB	013H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	03eH
	DB	05H
	DB	00H
	DD	016daH
	DW	050H
	DB	010H
	DB	012H
	DB	012H
	DB	01H
	DB	012H
	DB	00H
	DB	00H
	DB	00H
	DD	0176aH
	DW	051H
	DB	014H
	DB	014H
	DB	012H
	DB	01H
	DB	015H
	DB	043H
	DB	02H
	DB	00H
	DD	01832H
	DW	052H
	DB	013H
	DB	012H
	DB	012H
	DB	01H
	DB	013H
	DB	00H
	DB	00H
	DB	00H
	DD	018e6H
	DW	053H
	DB	011H
	DB	012H
	DB	012H
	DB	01H
	DB	012H
	DB	045H
	DB	01H
	DB	00H
	DD	01988H
	DW	054H
	DB	012H
	DB	012H
	DB	012H
	DB	00H
	DB	012H
	DB	046H
	DB	03H
	DB	00H
	DD	01a2aH
	DW	055H
	DB	012H
	DB	012H
	DB	012H
	DB	01H
	DB	015H
	DB	049H
	DB	03H
	DB	00H
	DD	01accH
	DW	056H
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	013H
	DB	04cH
	DB	05H
	DB	00H
	DD	01b80H
	DW	057H
	DB	019H
	DB	012H
	DB	012H
	DB	00H
	DB	019H
	DB	00H
	DB	00H
	DB	00H
	DD	01c6aH
	DW	058H
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	013H
	DB	051H
	DB	01H
	DB	00H
	DD	01d1eH
	DW	059H
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	013H
	DB	052H
	DB	06H
	DB	00H
	DD	01dd2H
	DW	05aH
	DB	012H
	DB	012H
	DB	012H
	DB	00H
	DB	012H
	DB	00H
	DB	00H
	DB	00H
	DD	01e74H
	DW	05bH
	DB	09H
	DB	017H
	DB	012H
	DB	01H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	01ee7H
	DW	05cH
	DB	07H
	DB	012H
	DB	012H
	DB	00H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DD	01f2fH
	DW	05dH
	DB	09H
	DB	017H
	DB	012H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	01fa2H
	DW	05eH
	DB	0eH
	DB	0aH
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	01fe8H
	DW	05fH
	DB	0eH
	DB	02H
	DB	0feH
	DB	0ffH
	DB	0dH
	DB	00H
	DB	00H
	DB	060H
	DD	01ff6H
	DW	060H
	DB	07H
	DB	04H
	DB	012H
	DB	00H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DD	02006H
	DW	061H
	DB	010H
	DB	0dH
	DB	0dH
	DB	00H
	DB	011H
	DB	058H
	DB	04H
	DB	00H
	DD	0206eH
	DW	062H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	020feH
	DW	063H
	DB	010H
	DB	0dH
	DB	0dH
	DB	00H
	DB	011H
	DB	05cH
	DB	02H
	DB	00H
	DD	02166H
	DW	064H
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	05eH
	DB	03H
	DB	00H
	DD	021f6H
	DW	065H
	DB	010H
	DB	0dH
	DB	0dH
	DB	00H
	DB	011H
	DB	061H
	DB	0bH
	DB	00H
	DD	0225eH
	DW	066H
	DB	0bH
	DB	012H
	DB	012H
	DB	00H
	DB	0aH
	DB	06cH
	DB	01H
	DB	00H
	DD	022caH
	DW	067H
	DB	010H
	DB	012H
	DB	0dH
	DB	00H
	DB	011H
	DB	06dH
	DB	02H
	DB	00H
	DD	0235aH
	DW	068H
	DB	0fH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	06fH
	DB	02H
	DB	00H
	DD	023eaH
	DW	069H
	DB	06H
	DB	012H
	DB	012H
	DB	01H
	DB	08H
	DB	071H
	DB	01H
	DB	00H
	DD	02420H
	DW	06aH
	DB	09H
	DB	017H
	DB	012H
	DB	0feH
	DB	08H
	DB	072H
	DB	01H
	DB	00H
	DD	02493H
	DW	06bH
	DB	010H
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	073H
	DB	01H
	DB	00H
	DD	02523H
	DW	06cH
	DB	06H
	DB	012H
	DB	012H
	DB	01H
	DB	08H
	DB	074H
	DB	02H
	DB	00H
	DD	02559H
	DW	06dH
	DB	017H
	DB	0dH
	DB	0dH
	DB	01H
	DB	019H
	DB	076H
	DB	02H
	DB	00H
	DD	025f5H
	DW	06eH
	DB	0fH
	DB	0dH
	DB	0dH
	DB	01H
	DB	011H
	DB	078H
	DB	01H
	DB	00H
	DD	0265dH
	DW	06fH
	DB	010H
	DB	0dH
	DB	0dH
	DB	00H
	DB	011H
	DB	079H
	DB	0bH
	DB	00H
	DD	026c5H
	DW	070H
	DB	0fH
	DB	012H
	DB	0dH
	DB	01H
	DB	011H
	DB	084H
	DB	02H
	DB	00H
	DD	02755H
	DW	071H
	DB	010H
	DB	012H
	DB	0dH
	DB	00H
	DB	011H
	DB	086H
	DB	03H
	DB	00H
	DD	027e5H
	DW	072H
	DB	0bH
	DB	0dH
	DB	0dH
	DB	01H
	DB	0bH
	DB	089H
	DB	04H
	DB	00H
	DD	02833H
	DW	073H
	DB	0fH
	DB	0dH
	DB	0dH
	DB	00H
	DB	0fH
	DB	08dH
	DB	02H
	DB	00H
	DD	0289bH
	DW	074H
	DB	0bH
	DB	012H
	DB	012H
	DB	00H
	DB	0bH
	DB	08fH
	DB	01H
	DB	00H
	DD	02907H
	DW	075H
	DB	0fH
	DB	0dH
	DB	0dH
	DB	01H
	DB	011H
	DB	090H
	DB	06H
	DB	00H
	DD	0296fH
	DW	076H
	DB	010H
	DB	0dH
	DB	0dH
	DB	00H
	DB	0fH
	DB	096H
	DB	06H
	DB	00H
	DD	029d7H
	DW	077H
	DB	018H
	DB	0dH
	DB	0dH
	DB	00H
	DB	018H
	DB	09cH
	DB	02H
	DB	00H
	DD	02a73H
	DW	078H
	DB	011H
	DB	0dH
	DB	0dH
	DB	00H
	DB	011H
	DB	09eH
	DB	02H
	DB	00H
	DD	02ae8H
	DW	079H
	DB	010H
	DB	012H
	DB	0dH
	DB	00H
	DB	0fH
	DB	0a0H
	DB	01H
	DB	00H
	DD	02b78H
	DW	07aH
	DB	0eH
	DB	0dH
	DB	0dH
	DB	00H
	DB	0eH
	DB	0a1H
	DB	01H
	DB	00H
	DD	02bd3H
	DW	07bH
	DB	0aH
	DB	017H
	DB	012H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	02c46H
	DW	07cH
	DB	05H
	DB	017H
	DB	012H
	DB	01H
	DB	07H
	DB	00H
	DB	00H
	DB	00H
	DD	02c8bH
	DW	07dH
	DB	0aH
	DB	017H
	DB	012H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	02cfeH
	DW	07eH
	DB	0fH
	DB	06H
	DB	0cH
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	02d2eH
	DW	0a1H
	DB	06H
	DB	012H
	DB	0dH
	DB	01H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DD	02d64H
	DW	0a2H
	DB	010H
	DB	017H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	02e1cH
	DW	0a3H
	DB	010H
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	02eacH
	DW	0a5H
	DB	011H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	02f4eH
	DW	0a9H
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	014H
	DB	00H
	DB	00H
	DB	00H
	DD	03002H
	DW	0aeH
	DB	014H
	DB	012H
	DB	012H
	DB	00H
	DB	014H
	DB	00H
	DB	00H
	DB	00H
	DD	030b6H
	DW	0b1H
	DB	0eH
	DB	012H
	DB	012H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	03134H
	DW	0b4H
	DB	07H
	DB	04H
	DB	012H
	DB	02H
	DB	08H
	DB	00H
	DB	00H
	DB	00H
	DD	03144H
	DW	0baH
	DB	0aH
	DB	09H
	DB	012H
	DB	00H
	DB	0aH
	DB	00H
	DB	00H
	DB	00H
	DD	03171H
	DW	0bfH
	DB	0fH
	DB	012H
	DB	0dH
	DB	00H
	DB	0fH
	DB	00H
	DB	00H
	DB	00H
	DD	03201H
	DW	0d7H
	DB	0eH
	DB	0eH
	DB	010H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	03263H
	DW	0f7H
	DB	0eH
	DB	0fH
	DB	010H
	DB	01H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
	DD	00H
	DW	0201dH
	DB	0dH
	DB	0aH
	DB	012H
	DB	00H
	DB	0dH
	DB	0a2H
	DB	03H
	DB	00H
	DD	046H
	DW	02022H
	DB	09H
	DB	08H
	DB	0dH
	DB	02H
	DB	0dH
	DB	00H
	DB	00H
	DB	00H
	DD	06eH
	DW	020acH
	DB	010H
	DB	012H
	DB	012H
	DB	00H
	DB	011H
	DB	00H
	DB	00H
	DB	00H
?unicodes_ariblk_25_4bpp@@3QBQBEB DD FLAT:?unicodes_ariblk_25_4bpp_0@@3QBEB ; unicodes_ariblk_25_4bpp
	DD	00H
	DD	00H
	DD	00H
	DD	FLAT:?unicodes_ariblk_25_4bpp_4@@3QBEB
CONST	ENDS
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getFontHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFontHeight
PUBLIC	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ	; touchgfx::Font::getMinimumTextHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getByteAlignRow@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getByteAlignRow
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::Font::getContextualFormsTable
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	??1ConstFont@touchgfx@@UAE@XZ			; touchgfx::ConstFont::~ConstFont
PUBLIC	??1GeneratedFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedFont::~GeneratedFont
PUBLIC	?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ ; getFont_ariblk_25_4bpp
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	_atexit:PROC
EXTRN	__Init_thread_header:PROC
EXTRN	__Init_thread_abort:PROC
EXTRN	__Init_thread_footer:PROC
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z:PROC ; touchgfx::GeneratedFont::GeneratedFont
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	__Init_thread_epoch:DWORD
EXTRN	?kerning_ariblk_25_4bpp@@3QBUKerningNode@touchgfx@@B:BYTE ; kerning_ariblk_25_4bpp
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
EXTRN	__tls_array:DWORD
EXTRN	__tls_index:DWORD
_BSS	SEGMENT
?ariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4V23@A DB 028H DUP (?) ; `getFont_ariblk_25_4bpp'::`2'::ariblk_25_4bpp
?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA DD 01H DUP (?) ; `getFont_ariblk_25_4bpp'::`2'::$TSS0
_BSS	ENDS
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ$0
__ehfuncinfo$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??__Fariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@YAXXZ
text$yd	SEGMENT
??__Fariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@YAXXZ PROC ; `getFont_ariblk_25_4bpp'::`2'::`dynamic atexit destructor for 'ariblk_25_4bpp'', COMDAT
	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	mov	edi, ebp
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	ecx, OFFSET ?ariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4V23@A
	call	??1GeneratedFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 192				; 000000c0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??__Fariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@YAXXZ ENDP ; `getFont_ariblk_25_4bpp'::`2'::`dynamic atexit destructor for 'ariblk_25_4bpp''
text$yd	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ
_TEXT	SEGMENT
__$EHRec$ = -12						; size = 12
?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ PROC ; getFont_ariblk_25_4bpp, COMDAT
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\Table_ariblk_25_4bpp.cpp
; Line 135
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-12]
	xor	ecx, ecx
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	ecx, OFFSET __271F0C62_Table_ariblk_25_4bpp@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 136
	mov	eax, DWORD PTR __tls_index
	mov	ecx, DWORD PTR fs:__tls_array
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	eax, DWORD PTR ?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA
	cmp	eax, DWORD PTR __Init_thread_epoch[edx]
	jle	SHORT $LN2@getFont_ar
	push	OFFSET ?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA
	call	__Init_thread_header
	add	esp, 4
	cmp	DWORD PTR ?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA, -1
	jne	SHORT $LN2@getFont_ar
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	push	0
	push	0
	push	0
	push	63					; 0000003fH
	push	OFFSET ?kerning_ariblk_25_4bpp@@3QBUKerningNode@touchgfx@@B ; kerning_ariblk_25_4bpp
	push	OFFSET ?unicodes_ariblk_25_4bpp@@3QBQBEB ; unicodes_ariblk_25_4bpp
	push	1
	push	2
	push	1
	push	4
	push	5
	push	25					; 00000019H
	push	110					; 0000006eH
	push	OFFSET ?glyphs_ariblk_25_4bpp@@3QBUGlyphNode@touchgfx@@B ; glyphs_ariblk_25_4bpp
	mov	ecx, OFFSET ?ariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4V23@A
	call	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z ; touchgfx::GeneratedFont::GeneratedFont
	push	OFFSET ??__Fariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@YAXXZ ; `getFont_ariblk_25_4bpp'::`2'::`dynamic atexit destructor for 'ariblk_25_4bpp''
	call	_atexit
	add	esp, 4
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	push	OFFSET ?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA
	call	__Init_thread_footer
	add	esp, 4
$LN2@getFont_ar:
; Line 137
	mov	eax, OFFSET ?ariblk_25_4bpp@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4V23@A
; Line 138
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ$0:
	push	OFFSET ?$TSS0@?1??getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ@4HA
	call	__Init_thread_abort
	pop	ecx
	ret	0
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-208]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?getFont_ariblk_25_4bpp@@YAAAVGeneratedFont@touchgfx@@XZ ENDP ; getFont_ariblk_25_4bpp
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedFont@touchgfx@@UAE@XZ PROC			; touchgfx::GeneratedFont::~GeneratedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ConstFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::GeneratedFont::~GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConstFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ConstFont@touchgfx@@UAE@XZ PROC			; touchgfx::ConstFont::~ConstFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConstFont@touchgfx@@UAE@XZ ENDP			; touchgfx::ConstFont::~ConstFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::Font::getContextualFormsTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 420
	xor	eax, eax
; Line 421
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::Font::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 410
	xor	eax, eax
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 390
	xor	al, al
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByteAlignRow@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getByteAlignRow@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getByteAlignRow, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	shr	al, 7
	and	al, 1
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getByteAlignRow@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getByteAlignRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	and	al, 127					; 0000007fH
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ PROC	; touchgfx::Font::getMinimumTextHeight, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	add	eax, edx
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ ENDP	; touchgfx::Font::getMinimumTextHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontHeight@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFontHeight, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontHeight@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFontHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+12]
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+10]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 200
	movzx	eax, WORD PTR _unicode$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getGlyph
; Line 202
	xor	eax, eax
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 204
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 205
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 206
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _glyph$[ebp]
$LN1@getGlyph:
; Line 208
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@getGlyph:
	DD	2
	DD	$LN6@getGlyph
$LN6@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN4@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
_TEXT	ENDS
END
