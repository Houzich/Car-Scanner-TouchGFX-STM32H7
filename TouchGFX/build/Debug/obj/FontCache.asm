; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30037.0 

	TITLE	G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\build\Debug\obj\FontCache.obj
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

msvcjmc	SEGMENT
__35DE20DC_corecrt_memcpy_s@h DB 01H
__30CF10AF_corecrt_memory@h DB 01H
__C8923761_corecrt_wstring@h DB 01H
__6005DAEF_string@h DB 01H
__EBE8CD87_Types@hpp DB 01H
__4A756E09_Unicode@hpp DB 01H
__6F04AFDB_Font@hpp DB 01H
__A92A06CE_Bitmap@hpp DB 01H
__3A5A5F57_Texts@hpp DB 01H
__38F934C6_TypedText@hpp DB 01H
__DA52D3C6_FontManager@hpp DB 01H
__73B1C567_ApplicationFontProvider@hpp DB 01H
__7DE96F7D_FontCache@hpp DB 01H
__273908D5_ConstFont@hpp DB 01H
__3F3F6DE8_GeneratedFont@hpp DB 01H
__F2011609_CachedFont@hpp DB 01H
__5A650CE3_FontCache@cpp DB 01H
msvcjmc	ENDS
PUBLIC	?width@GlyphNode@touchgfx@@QBEGXZ		; touchgfx::GlyphNode::width
PUBLIC	?height@GlyphNode@touchgfx@@QBEGXZ		; touchgfx::GlyphNode::height
PUBLIC	??1Font@touchgfx@@UAE@XZ			; touchgfx::Font::~Font
PUBLIC	?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z	; touchgfx::Font::getGlyph
PUBLIC	?getFallbackChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFallbackChar
PUBLIC	?getEllipsisChar@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getEllipsisChar
PUBLIC	?getFontHeight@Font@touchgfx@@UBEGXZ		; touchgfx::Font::getFontHeight
PUBLIC	?getMinimumTextHeight@Font@touchgfx@@UBEGXZ	; touchgfx::Font::getMinimumTextHeight
PUBLIC	?getBitsPerPixel@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getBitsPerPixel
PUBLIC	?getByteAlignRow@Font@touchgfx@@UBEEXZ		; touchgfx::Font::getByteAlignRow
PUBLIC	?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ; touchgfx::Font::getKerning
PUBLIC	?getGSUBTable@Font@touchgfx@@UBEPBGXZ		; touchgfx::Font::getGSUBTable
PUBLIC	?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::Font::getContextualFormsTable
PUBLIC	??4Font@touchgfx@@QAEAAV01@ABV01@@Z		; touchgfx::Font::operator=
PUBLIC	??_GFont@touchgfx@@UAEPAXI@Z			; touchgfx::Font::`scalar deleting destructor'
PUBLIC	??1TypedText@touchgfx@@UAE@XZ			; touchgfx::TypedText::~TypedText
PUBLIC	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ	; touchgfx::TypedText::getFont
PUBLIC	?getFontId@TypedText@touchgfx@@QBEGXZ		; touchgfx::TypedText::getFontId
PUBLIC	?getTextDirection@TypedText@touchgfx@@QBEEXZ	; touchgfx::TypedText::getTextDirection
PUBLIC	?assertValid@TypedText@touchgfx@@ABEXXZ		; touchgfx::TypedText::assertValid
PUBLIC	??0TypedText@touchgfx@@QAE@ABV01@@Z		; touchgfx::TypedText::TypedText
PUBLIC	??_GTypedText@touchgfx@@UAEPAXI@Z		; touchgfx::TypedText::`scalar deleting destructor'
PUBLIC	??0FontCache@touchgfx@@QAE@XZ			; touchgfx::FontCache::FontCache
PUBLIC	?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ; touchgfx::FontCache::setReader
PUBLIC	?clear@FontCache@touchgfx@@QAEX_N@Z		; touchgfx::FontCache::clear
PUBLIC	?setMemory@FontCache@touchgfx@@QAEXPAEI@Z	; touchgfx::FontCache::setMemory
PUBLIC	?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ; touchgfx::FontCache::initializeCachedFont
PUBLIC	?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ; touchgfx::FontCache::cacheString
PUBLIC	?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ; touchgfx::FontCache::cacheLigatures
PUBLIC	?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ; touchgfx::FontCache::getGlyph
PUBLIC	?open@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::open
PUBLIC	?close@FontCache@touchgfx@@QAEXXZ		; touchgfx::FontCache::close
PUBLIC	?contains@FontCache@touchgfx@@ABE_NGG@Z		; touchgfx::FontCache::contains
PUBLIC	?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z	; touchgfx::FontCache::insert
PUBLIC	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ; touchgfx::FontCache::copyGlyph
PUBLIC	?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
PUBLIC	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
PUBLIC	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
PUBLIC	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
PUBLIC	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z	; touchgfx::FontCache::sortSortedString
PUBLIC	?setPosition@FontCache@touchgfx@@AAEXI@Z	; touchgfx::FontCache::setPosition
PUBLIC	?readData@FontCache@touchgfx@@AAEXPAXI@Z	; touchgfx::FontCache::readData
PUBLIC	??1ConstFont@touchgfx@@UAE@XZ			; touchgfx::ConstFont::~ConstFont
PUBLIC	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::ConstFont::operator=
PUBLIC	??1GeneratedFont@touchgfx@@UAE@XZ		; touchgfx::GeneratedFont::~GeneratedFont
PUBLIC	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::GeneratedFont::operator=
PUBLIC	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
PUBLIC	?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ	; touchgfx::CachedFont::getGSUBTable
PUBLIC	?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z	; touchgfx::CachedFont::setGSUBTable
PUBLIC	?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ; touchgfx::CachedFont::getContextualFormsTable
PUBLIC	?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z ; touchgfx::CachedFont::setContextualFormsTable
PUBLIC	??1CachedFont@touchgfx@@UAE@XZ			; touchgfx::CachedFont::~CachedFont
PUBLIC	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z	; touchgfx::CachedFont::operator=
PUBLIC	??_GCachedFont@touchgfx@@UAEPAXI@Z		; touchgfx::CachedFont::`scalar deleting destructor'
PUBLIC	__JustMyCode_Default
PUBLIC	??_7Font@touchgfx@@6B@				; touchgfx::Font::`vftable'
PUBLIC	??_7TypedText@touchgfx@@6B@			; touchgfx::TypedText::`vftable'
PUBLIC	??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ ; `string'
PUBLIC	??_C@_1NG@EDAKDIEI@?$AAG?$AA?3?$AA?2?$AAG?$AAe?$AAr?$AAm?$AAa?$AAn?$AAy?$AA?2?$AAS?$AAc?$AAa?$AAn@ ; `string'
PUBLIC	??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ ; `string'
PUBLIC	??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ ; `string'
PUBLIC	??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@ ; `string'
PUBLIC	??_7CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`vftable'
PUBLIC	??_R4Font@touchgfx@@6B@				; touchgfx::Font::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVFont@touchgfx@@@8			; touchgfx::Font `RTTI Type Descriptor'
PUBLIC	??_R3Font@touchgfx@@8				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2Font@touchgfx@@8				; touchgfx::Font::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@Font@touchgfx@@8			; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4TypedText@touchgfx@@6B@			; touchgfx::TypedText::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVTypedText@touchgfx@@@8			; touchgfx::TypedText `RTTI Type Descriptor'
PUBLIC	??_R3TypedText@touchgfx@@8			; touchgfx::TypedText::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2TypedText@touchgfx@@8			; touchgfx::TypedText::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@TypedText@touchgfx@@8		; touchgfx::TypedText::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4CachedFont@touchgfx@@6B@			; touchgfx::CachedFont::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVCachedFont@touchgfx@@@8			; touchgfx::CachedFont `RTTI Type Descriptor'
PUBLIC	??_R3CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2CachedFont@touchgfx@@8			; touchgfx::CachedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@CachedFont@touchgfx@@8		; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@GeneratedFont@touchgfx@@8		; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVGeneratedFont@touchgfx@@@8		; touchgfx::GeneratedFont `RTTI Type Descriptor'
PUBLIC	??_R3GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2GeneratedFont@touchgfx@@8			; touchgfx::GeneratedFont::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ConstFont@touchgfx@@8		; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVConstFont@touchgfx@@@8			; touchgfx::ConstFont `RTTI Type Descriptor'
PUBLIC	??_R3ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ConstFont@touchgfx@@8			; touchgfx::ConstFont::`RTTI Base Class Array'
EXTRN	__purecall:PROC
EXTRN	??3@YAXPAXI@Z:PROC				; operator delete
EXTRN	__imp___wassert:PROC
EXTRN	?strlen@Unicode@touchgfx@@SAGPBG@Z:PROC		; touchgfx::Unicode::strlen
EXTRN	?getStringWidth@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getStringWidth@Font@touchgfx@@UBAGEPBGZZ:PROC	; touchgfx::Font::getStringWidth
EXTRN	?getCharWidth@Font@touchgfx@@UBEGG@Z:PROC	; touchgfx::Font::getCharWidth
EXTRN	?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ:PROC	; touchgfx::Font::getSpacingAbove
EXTRN	?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getMaxTextHeight
EXTRN	?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ:PROC	; touchgfx::Font::getNumberOfLines
EXTRN	??_EFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::Font::`vector deleting destructor'
EXTRN	??0TextProvider@touchgfx@@QAE@XZ:PROC		; touchgfx::TextProvider::TextProvider
EXTRN	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0PBUFontContextualFormsTable@2@@Z:PROC ; touchgfx::TextProvider::initialize
EXTRN	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z:PROC ; touchgfx::TextProvider::getNextLigature
EXTRN	?memset@touchgfx@@YAXPAXEI@Z:PROC		; touchgfx::memset
EXTRN	??_ETypedText@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::TypedText::`vector deleting destructor'
EXTRN	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z:PROC ; touchgfx::GeneratedFont::GeneratedFont
EXTRN	?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z:PROC ; touchgfx::CachedFont::getGlyph
EXTRN	?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getPixelData
EXTRN	?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z:PROC ; touchgfx::CachedFont::getKerning
EXTRN	??_ECachedFont@touchgfx@@UAEPAXI@Z:PROC		; touchgfx::CachedFont::`vector deleting destructor'
EXTRN	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ:PROC ; TypedTextDatabase::getFonts
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__CheckForDebuggerJustMyCode@4:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	___CxxFrameHandler3:PROC
EXTRN	?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B:DWORD ; touchgfx::TypedText::typedTexts
EXTRN	?fonts@TypedText@touchgfx@@0PBQBVFont@2@B:DWORD	; touchgfx::TypedText::fonts
EXTRN	?numberOfTypedTexts@TypedText@touchgfx@@0GA:WORD ; touchgfx::TypedText::numberOfTypedTexts
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_R2ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R2ConstFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8 ; touchgfx::ConstFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R3ConstFont@touchgfx@@8 DD 00H			; touchgfx::ConstFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVConstFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVConstFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::ConstFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVConstFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@ConstFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ConstFont@touchgfx@@8 DD FLAT:??_R0?AVConstFont@touchgfx@@@8 ; touchgfx::ConstFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ConstFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2GeneratedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3GeneratedFont@touchgfx@@8 DD 00H			; touchgfx::GeneratedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	03H
	DD	FLAT:??_R2GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVGeneratedFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVGeneratedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::GeneratedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVGeneratedFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@GeneratedFont@touchgfx@@8 DD FLAT:??_R0?AVGeneratedFont@touchgfx@@@8 ; touchgfx::GeneratedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	02H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3GeneratedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CachedFont@touchgfx@@8 DD FLAT:??_R0?AVCachedFont@touchgfx@@@8 ; touchgfx::CachedFont::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	03H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R2CachedFont@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@CachedFont@touchgfx@@8 ; touchgfx::CachedFont::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@GeneratedFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@ConstFont@touchgfx@@8
	DD	FLAT:??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R3CachedFont@touchgfx@@8
rdata$r	SEGMENT
??_R3CachedFont@touchgfx@@8 DD 00H			; touchgfx::CachedFont::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	04H
	DD	FLAT:??_R2CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVCachedFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVCachedFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::CachedFont `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVCachedFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CachedFont@touchgfx@@6B@
rdata$r	SEGMENT
??_R4CachedFont@touchgfx@@6B@ DD 00H			; touchgfx::CachedFont::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVCachedFont@touchgfx@@@8
	DD	FLAT:??_R3CachedFont@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@TypedText@touchgfx@@8 DD FLAT:??_R0?AVTypedText@touchgfx@@@8 ; touchgfx::TypedText::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R2TypedText@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@TypedText@touchgfx@@8 ; touchgfx::TypedText::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3TypedText@touchgfx@@8
rdata$r	SEGMENT
??_R3TypedText@touchgfx@@8 DD 00H			; touchgfx::TypedText::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVTypedText@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVTypedText@touchgfx@@@8 DD FLAT:??_7type_info@@6B@ ; touchgfx::TypedText `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVTypedText@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4TypedText@touchgfx@@6B@
rdata$r	SEGMENT
??_R4TypedText@touchgfx@@6B@ DD 00H			; touchgfx::TypedText::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVTypedText@touchgfx@@@8
	DD	FLAT:??_R3TypedText@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Font@touchgfx@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Font@touchgfx@@8 DD FLAT:??_R0?AVFont@touchgfx@@@8 ; touchgfx::Font::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R2Font@touchgfx@@8
rdata$r	SEGMENT
??_R2Font@touchgfx@@8 DD FLAT:??_R1A@?0A@EA@Font@touchgfx@@8 ; touchgfx::Font::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3Font@touchgfx@@8
rdata$r	SEGMENT
??_R3Font@touchgfx@@8 DD 00H				; touchgfx::Font::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVFont@touchgfx@@@8
data$rs	SEGMENT
??_R0?AVFont@touchgfx@@@8 DD FLAT:??_7type_info@@6B@	; touchgfx::Font `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVFont@touchgfx@@', 00H
data$rs	ENDS
;	COMDAT ??_R4Font@touchgfx@@6B@
rdata$r	SEGMENT
??_R4Font@touchgfx@@6B@ DD 00H				; touchgfx::Font::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVFont@touchgfx@@@8
	DD	FLAT:??_R3Font@touchgfx@@8
rdata$r	ENDS
;	COMDAT ??_7CachedFont@touchgfx@@6B@
CONST	SEGMENT
??_7CachedFont@touchgfx@@6B@ DD FLAT:??_R4CachedFont@touchgfx@@6B@ ; touchgfx::CachedFont::`vftable'
	DD	FLAT:??_ECachedFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:?getGlyph@CachedFont@touchgfx@@UBEPBUGlyphNode@2@GAAPBEAAE@Z
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@CachedFont@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
	DD	FLAT:?getPixelData@CachedFont@touchgfx@@UBEPBEPBUGlyphNode@2@@Z
	DD	FLAT:?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
	DD	FLAT:?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z
CONST	ENDS
;	COMDAT ??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@
CONST	SEGMENT
??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 'I', 00H, 'd', 00H, ' ', 00H, '<', 00H, ' '
	DB	00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e', 00H, 'r', 00H
	DB	'O', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd'
	DB	00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 's', 00H, ' ', 00H
	DB	'&', 00H, '&', 00H, ' ', 00H, '"', 00H, 't', 00H, 'y', 00H, 'p'
	DB	00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H
	DB	'I', 00H, 'd', 00H, ' ', 00H, 'l', 00H, 'a', 00H, 'r', 00H, 'g'
	DB	00H, 'e', 00H, 'r', 00H, ' ', 00H, 't', 00H, 'h', 00H, 'a', 00H
	DB	'n', 00H, ' ', 00H, 'n', 00H, 'u', 00H, 'm', 00H, 'b', 00H, 'e'
	DB	00H, 'r', 00H, 'O', 00H, 'f', 00H, 'T', 00H, 'y', 00H, 'p', 00H
	DB	'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, 's'
	DB	00H, '.', 00H, '"', 00H, 00H, 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
CONST	SEGMENT
??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@ DB 'typedTextId la'
	DB	'rger than numberOfTypedTexts.', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
CONST	SEGMENT
??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@ DB 't'
	DB	00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e', 00H
	DB	'x', 00H, 't', 00H, 's', 00H, ' ', 00H, '!', 00H, '=', 00H, ' '
	DB	00H, '0', 00H, ' ', 00H, '&', 00H, '&', 00H, ' ', 00H, '"', 00H
	DB	'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H, 'T', 00H, 'e'
	DB	00H, 'x', 00H, 't', 00H, ' ', 00H, 'd', 00H, 'a', 00H, 't', 00H
	DB	'a', 00H, 'b', 00H, 'a', 00H, 's', 00H, 'e', 00H, ' ', 00H, 'h'
	DB	00H, 'a', 00H, 's', 00H, ' ', 00H, 'n', 00H, 'o', 00H, 't', 00H
	DB	' ', 00H, 'b', 00H, 'e', 00H, 'e', 00H, 'n', 00H, ' ', 00H, 'i'
	DB	00H, 'n', 00H, 'i', 00H, 't', 00H, 'i', 00H, 'a', 00H, 'l', 00H
	DB	'i', 00H, 'z', 00H, 'e', 00H, 'd', 00H, '.', 00H, '"', 00H, 00H
	DB	00H						; `string'
CONST	ENDS
;	COMDAT ??_C@_1NG@EDAKDIEI@?$AAG?$AA?3?$AA?2?$AAG?$AAe?$AAr?$AAm?$AAa?$AAn?$AAy?$AA?2?$AAS?$AAc?$AAa?$AAn@
CONST	SEGMENT
??_C@_1NG@EDAKDIEI@?$AAG?$AA?3?$AA?2?$AAG?$AAe?$AAr?$AAm?$AAa?$AAn?$AAy?$AA?2?$AAS?$AAc?$AAa?$AAn@ DB 'G'
	DB	00H, ':', 00H, '\', 00H, 'G', 00H, 'e', 00H, 'r', 00H, 'm', 00H
	DB	'a', 00H, 'n', 00H, 'y', 00H, '\', 00H, 'S', 00H, 'c', 00H, 'a'
	DB	00H, 'n', 00H, 'n', 00H, 'e', 00H, 'r', 00H, '\', 00H, 'F', 00H
	DB	'i', 00H, 'r', 00H, 'm', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e'
	DB	00H, '\', 00H, 'D', 00H, 'i', 00H, 's', 00H, 'p', 00H, 'l', 00H
	DB	'a', 00H, 'y', 00H, '_', 00H, 'B', 00H, 'o', 00H, 'a', 00H, 'r'
	DB	00H, 'd', 00H, '\', 00H, 'M', 00H, 'i', 00H, 'd', 00H, 'd', 00H
	DB	'l', 00H, 'e', 00H, 'w', 00H, 'a', 00H, 'r', 00H, 'e', 00H, 's'
	DB	00H, '\', 00H, 'S', 00H, 'T', 00H, '\', 00H, 't', 00H, 'o', 00H
	DB	'u', 00H, 'c', 00H, 'h', 00H, 'g', 00H, 'f', 00H, 'x', 00H, '\'
	DB	00H, 'f', 00H, 'r', 00H, 'a', 00H, 'm', 00H, 'e', 00H, 'w', 00H
	DB	'o', 00H, 'r', 00H, 'k', 00H, '\', 00H, 'i', 00H, 'n', 00H, 'c'
	DB	00H, 'l', 00H, 'u', 00H, 'd', 00H, 'e', 00H, '\', 00H, 't', 00H
	DB	'o', 00H, 'u', 00H, 'c', 00H, 'h', 00H, 'g', 00H, 'f', 00H, 'x'
	DB	00H, '\', 00H, 'T', 00H, 'y', 00H, 'p', 00H, 'e', 00H, 'd', 00H
	DB	'T', 00H, 'e', 00H, 'x', 00H, 't', 00H, '.', 00H, 'h', 00H, 'p'
	DB	00H, 'p', 00H, 00H, 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
CONST	SEGMENT
??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@ DB 'TypedText dat'
	DB	'abase has not been initialized.', 00H	; `string'
CONST	ENDS
;	COMDAT ??_7TypedText@touchgfx@@6B@
CONST	SEGMENT
??_7TypedText@touchgfx@@6B@ DD FLAT:??_R4TypedText@touchgfx@@6B@ ; touchgfx::TypedText::`vftable'
	DD	FLAT:??_ETypedText@touchgfx@@UAEPAXI@Z
CONST	ENDS
;	COMDAT ??_7Font@touchgfx@@6B@
CONST	SEGMENT
??_7Font@touchgfx@@6B@ DD FLAT:??_R4Font@touchgfx@@6B@	; touchgfx::Font::`vftable'
	DD	FLAT:??_EFont@touchgfx@@UAEPAXI@Z
	DD	FLAT:?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
	DD	FLAT:__purecall
	DD	FLAT:?getFallbackChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getEllipsisChar@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGEPBGZZ
	DD	FLAT:?getStringWidth@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getCharWidth@Font@touchgfx@@UBEGG@Z
	DD	FLAT:?getSpacingAbove@Font@touchgfx@@UBAEPBGZZ
	DD	FLAT:?getMaxTextHeight@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getFontHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
	DD	FLAT:?getBitsPerPixel@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getByteAlignRow@Font@touchgfx@@UBEEXZ
	DD	FLAT:?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
	DD	FLAT:?getNumberOfLines@Font@touchgfx@@UBAGPBGZZ
	DD	FLAT:?getGSUBTable@Font@touchgfx@@UBEPBGXZ
	DD	FLAT:?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ$0
__ehfuncinfo$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z$0
__ehfuncinfo$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z$0
__ehfuncinfo$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z$0
__ehfuncinfo$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z$0
__ehfuncinfo$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
xdata$x	ENDS
; Function compile flags: /Odt
;	COMDAT __JustMyCode_Default
_TEXT	SEGMENT
__JustMyCode_Default PROC				; COMDAT
	push	ebp
	mov	ebp, esp
	pop	ebp
	ret	0
__JustMyCode_Default ENDP
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GCachedFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GCachedFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::CachedFont::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	52					; 00000034H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GCachedFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::CachedFont::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::CachedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+40]
	mov	WORD PTR [eax+40], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+44]
	mov	DWORD PTR [eax+44], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+48]
	mov	DWORD PTR [eax+48], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::CachedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1CachedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1CachedFont@touchgfx@@UAE@XZ PROC			; touchgfx::CachedFont::~CachedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1GeneratedFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1CachedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::CachedFont::~CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_table$ = 8						; size = 4
?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z PROC ; touchgfx::CachedFont::setContextualFormsTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F2011609_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+36], ecx
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setContextualFormsTable@CachedFont@touchgfx@@UAEXPBUFontContextualFormsTable@2@@Z ENDP ; touchgfx::CachedFont::setContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::CachedFont::getContextualFormsTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 70
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F2011609_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 71
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+36], 0
	je	SHORT $LN2@getContext
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+36]
	jmp	SHORT $LN1@getContext
$LN2@getContext:
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+48]
	mov	edx, DWORD PTR [eax+68]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getContext:
; Line 76
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@CachedFont@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::CachedFont::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_table$ = 8						; size = 4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z PROC	; touchgfx::CachedFont::setGSUBTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 65
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F2011609_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 66
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _table$[ebp]
	mov	DWORD PTR [eax+32], ecx
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setGSUBTable@CachedFont@touchgfx@@UAEXPBG@Z ENDP	; touchgfx::CachedFont::setGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ PROC	; touchgfx::CachedFont::getGSUBTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 56
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F2011609_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 57
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+32], 0
	je	SHORT $LN2@getGSUBTab
; Line 59
	mov	eax, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [eax+32]
	jmp	SHORT $LN1@getGSUBTab
$LN2@getGSUBTab:
; Line 61
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+48]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+48]
	mov	edx, DWORD PTR [eax+64]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@getGSUBTab:
; Line 62
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@CachedFont@touchgfx@@UBEPBGXZ ENDP	; touchgfx::CachedFont::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_data$ = 8						; size = 4
_id$ = 12						; size = 2
__cache$ = 16						; size = 4
__flashFont$ = 20					; size = 4
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z PROC ; touchgfx::CachedFont::CachedFont, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\include\fonts\CachedFont.hpp
; Line 33
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __F2011609_CachedFont@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 16
	push	0
	push	0
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+38]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, WORD PTR [edx+36]
	push	eax
	push	0
	push	0
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+35]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+34]
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx+33]
	shr	al, 7
	and	al, 1
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	mov	al, BYTE PTR [edx+33]
	and	al, 127					; 0000007fH
	movzx	ecx, al
	push	ecx
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+32]
	push	eax
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, WORD PTR [ecx+30]
	push	edx
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, WORD PTR [eax+28]
	push	ecx
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	??0GeneratedFont@touchgfx@@QAE@PBUGlyphNode@1@GGEEEEEPBQBEPBUKerningNode@1@GGQBGPBUFontContextualFormsTable@1@@Z ; touchgfx::GeneratedFont::GeneratedFont
; Line 33
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7CachedFont@touchgfx@@6B@
; Line 30
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR _id$[ebp]
	mov	WORD PTR [eax+40], cx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __cache$[ebp]
	mov	DWORD PTR [eax+44], ecx
; Line 32
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __flashFont$[ebp]
	mov	DWORD PTR [eax+48], ecx
; Line 34
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ENDP ; touchgfx::CachedFont::CachedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC	; touchgfx::GeneratedFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR [eax+24], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+28]
	mov	DWORD PTR [eax+28], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+32]
	mov	DWORD PTR [eax+32], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+36]
	mov	DWORD PTR [eax+36], edx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4GeneratedFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP	; touchgfx::GeneratedFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1GeneratedFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1GeneratedFont@touchgfx@@UAE@XZ PROC			; touchgfx::GeneratedFont::~GeneratedFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1ConstFont@touchgfx@@UAE@XZ
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1GeneratedFont@touchgfx@@UAE@XZ ENDP			; touchgfx::GeneratedFont::~GeneratedFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z PROC		; touchgfx::ConstFont::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR ___that$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	??4Font@touchgfx@@QAEAAV01@ABV01@@Z
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	edx, DWORD PTR [ecx+16]
	mov	DWORD PTR [eax+16], edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+20]
	mov	WORD PTR [eax+20], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??4ConstFont@touchgfx@@QAEAAV01@$$QAV01@@Z ENDP		; touchgfx::ConstFont::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1ConstFont@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1ConstFont@touchgfx@@UAE@XZ PROC			; touchgfx::ConstFont::~ConstFont, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1ConstFont@touchgfx@@UAE@XZ ENDP			; touchgfx::ConstFont::~ConstFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?readData@FontCache@touchgfx@@AAEXPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_out$ = 8						; size = 4
_numberOfBytes$ = 12					; size = 4
?readData@FontCache@touchgfx@@AAEXPAXI@Z PROC		; touchgfx::FontCache::readData, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 420
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@readData
; Line 422
	mov	esi, esp
	mov	eax, DWORD PTR _numberOfBytes$[ebp]
	push	eax
	mov	ecx, DWORD PTR _out$[ebp]
	push	ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+80]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR [edx+16]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@readData:
; Line 424
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?readData@FontCache@touchgfx@@AAEXPAXI@Z ENDP		; touchgfx::FontCache::readData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setPosition@FontCache@touchgfx@@AAEXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_position$ = 8						; size = 4
?setPosition@FontCache@touchgfx@@AAEXI@Z PROC		; touchgfx::FontCache::setPosition, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 411
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 412
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@setPositio
; Line 414
	mov	esi, esp
	mov	eax, DWORD PTR _position$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+80]
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [edx]
	mov	ecx, DWORD PTR [eax+80]
	mov	eax, DWORD PTR [edx+12]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@setPositio:
; Line 416
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setPosition@FontCache@touchgfx@@AAEXI@Z ENDP		; touchgfx::FontCache::setPosition
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?sortSortedString@FontCache@touchgfx@@AAE_NH@Z
_TEXT	SEGMENT
_temp$1 = -68						; size = 2
_j$2 = -56						; size = 4
_swapped$3 = -41					; size = 1
_i$4 = -32						; size = 4
_uc$ = -20						; size = 4
_this$ = -8						; size = 4
_n$ = 8							; size = 4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z PROC	; touchgfx::FontCache::sortSortedString, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 385
	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-72]
	mov	ecx, 18					; 00000012H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 386
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _uc$[ebp], ecx
; Line 387
	mov	DWORD PTR _i$4[ebp], 0
	jmp	SHORT $LN4@sortSorted
$LN2@sortSorted:
	mov	eax, DWORD PTR _i$4[ebp]
	add	eax, 1
	mov	DWORD PTR _i$4[ebp], eax
$LN4@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, 1
	cmp	DWORD PTR _i$4[ebp], eax
	jge	$LN3@sortSorted
; Line 389
	mov	BYTE PTR _swapped$3[ebp], 0
; Line 390
	mov	DWORD PTR _j$2[ebp], 0
	jmp	SHORT $LN7@sortSorted
$LN5@sortSorted:
	mov	eax, DWORD PTR _j$2[ebp]
	add	eax, 1
	mov	DWORD PTR _j$2[ebp], eax
$LN7@sortSorted:
	mov	eax, DWORD PTR _n$[ebp]
	sub	eax, DWORD PTR _i$4[ebp]
	sub	eax, 1
	cmp	DWORD PTR _j$2[ebp], eax
	jge	SHORT $LN6@sortSorted
; Line 392
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	edx, WORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	movzx	eax, WORD PTR [ecx+eax*2+2]
	cmp	edx, eax
	jle	SHORT $LN8@sortSorted
; Line 394
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [ecx+eax*2]
	mov	WORD PTR _temp$1[ebp], dx
; Line 395
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	edx, DWORD PTR _j$2[ebp]
	mov	esi, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR [esi+edx*2+2]
	mov	WORD PTR [ecx+eax*2], dx
; Line 396
	mov	eax, DWORD PTR _j$2[ebp]
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	dx, WORD PTR _temp$1[ebp]
	mov	WORD PTR [ecx+eax*2+2], dx
; Line 397
	mov	BYTE PTR _swapped$3[ebp], 1
$LN8@sortSorted:
; Line 399
	jmp	SHORT $LN5@sortSorted
$LN6@sortSorted:
; Line 402
	movzx	eax, BYTE PTR _swapped$3[ebp]
	test	eax, eax
	jne	SHORT $LN9@sortSorted
; Line 404
	jmp	SHORT $LN3@sortSorted
$LN9@sortSorted:
; Line 406
	jmp	$LN2@sortSorted
$LN3@sortSorted:
; Line 407
	mov	al, 1
; Line 408
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ENDP	; touchgfx::FontCache::sortSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
_TEXT	SEGMENT
tv142 = -396						; size = 4
tv128 = -396						; size = 4
$T2 = -385						; size = 1
$T3 = -373						; size = 1
$T4 = -361						; size = 1
_n$ = -148						; size = 4
_ligature$ = -136					; size = 2
_tp$ = -124						; size = 92
_pArg$ = -24						; size = 4
__$ArrayPad$ = -16					; size = 4
__$EHRec$ = -12						; size = 12
_this$ = 8						; size = 4
_font$ = 12						; size = 4
_t$ = 16						; size = 8
_string$ = 24						; size = 4
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ PROC ; touchgfx::FontCache::createSortedLigatures, COMDAT
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 358
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 384				; 00000180H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-204]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 360
	lea	eax, DWORD PTR _string$[ebp+4]
	mov	DWORD PTR _pArg$[ebp], eax
; Line 361
	lea	ecx, DWORD PTR _tp$[ebp]
	call	??0TextProvider@touchgfx@@QAE@XZ	; touchgfx::TextProvider::TextProvider
; Line 362
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+68]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+64]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	push	eax
	mov	ecx, DWORD PTR _pArg$[ebp]
	push	ecx
	mov	edx, DWORD PTR _string$[ebp]
	push	edx
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?initialize@TextProvider@touchgfx@@QAEXPBGPAD0PBUFontContextualFormsTable@2@@Z ; touchgfx::TextProvider::initialize
; Line 363
	mov	DWORD PTR _pArg$[ebp], 0
; Line 365
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	mov	DWORD PTR [eax+84], edx
; Line 366
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+72]
	jae	SHORT $LN4@createSort
; Line 368
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	$LN1@createSort
$LN4@createSort:
; Line 370
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 2
	mov	DWORD PTR tv128[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv128[ebp]
	mov	DWORD PTR [edx+84], eax
	xor	ecx, ecx
	mov	edx, DWORD PTR tv128[ebp]
	mov	WORD PTR [edx], cx
; Line 371
	mov	DWORD PTR _n$[ebp], 0
$LN2@createSort:
; Line 372
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getTextDirection@TypedText@touchgfx@@QBEEXZ ; touchgfx::TypedText::getTextDirection
	movzx	eax, al
	push	eax
	lea	ecx, DWORD PTR _tp$[ebp]
	call	?getNextLigature@TextProvider@touchgfx@@QAEGE@Z ; touchgfx::TextProvider::getNextLigature
	mov	WORD PTR _ligature$[ebp], ax
	movzx	ecx, WORD PTR _ligature$[ebp]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 374
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 2
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+72]
	jae	SHORT $LN5@createSort
; Line 376
	mov	BYTE PTR $T3[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T3[ebp]
	jmp	SHORT $LN1@createSort
$LN5@createSort:
; Line 378
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	sub	ecx, 2
	mov	DWORD PTR tv142[ebp], ecx
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR tv142[ebp]
	mov	DWORD PTR [edx+84], eax
	mov	ecx, DWORD PTR tv142[ebp]
	mov	dx, WORD PTR _ligature$[ebp]
	mov	WORD PTR [ecx], dx
; Line 379
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 380
	jmp	$LN2@createSort
$LN3@createSort:
; Line 381
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@createSort:
; Line 382
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN11@createSort
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 396				; 0000018cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN11@createSort:
	DD	1
	DD	$LN10@createSort
$LN10@createSort:
	DD	-124					; ffffff84H
	DD	92					; 0000005cH
	DD	$LN8@createSort
$LN8@createSort:
	DB	116					; 00000074H
	DB	112					; 00000070H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-400]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	ecx, DWORD PTR [edx-4]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ
	jmp	___CxxFrameHandler3
text$x	ENDS
?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ENDP ; touchgfx::FontCache::createSortedLigatures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z
_TEXT	SEGMENT
_uc$ = -44						; size = 4
_n$ = -32						; size = 4
_length$ = -20						; size = 4
_this$ = -8						; size = 4
_string$ = 8						; size = 4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z PROC	; touchgfx::FontCache::createSortedString, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 337
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 338
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	call	?strlen@Unicode@touchgfx@@SAGPBG@Z	; touchgfx::Unicode::strlen
	add	esp, 4
	movzx	ecx, ax
	mov	DWORD PTR _length$[ebp], ecx
; Line 340
	mov	eax, DWORD PTR _length$[ebp]
	lea	ecx, DWORD PTR [eax+eax+2]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+76]
	sub	eax, ecx
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+84], eax
; Line 341
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax+84]
	cmp	edx, DWORD PTR [ecx+72]
	jae	SHORT $LN4@createSort
; Line 344
	xor	al, al
	jmp	SHORT $LN1@createSort
$LN4@createSort:
; Line 346
	mov	DWORD PTR _n$[ebp], 0
; Line 347
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _uc$[ebp], ecx
$LN2@createSort:
; Line 348
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@createSort
; Line 350
	mov	eax, DWORD PTR _uc$[ebp]
	mov	ecx, DWORD PTR _string$[ebp]
	mov	dx, WORD PTR [ecx]
	mov	WORD PTR [eax], dx
	mov	eax, DWORD PTR _uc$[ebp]
	add	eax, 2
	mov	DWORD PTR _uc$[ebp], eax
	mov	ecx, DWORD PTR _string$[ebp]
	add	ecx, 2
	mov	DWORD PTR _string$[ebp], ecx
; Line 351
	mov	eax, DWORD PTR _n$[ebp]
	add	eax, 1
	mov	DWORD PTR _n$[ebp], eax
; Line 352
	jmp	SHORT $LN2@createSort
$LN3@createSort:
; Line 353
	xor	eax, eax
	mov	ecx, DWORD PTR _uc$[ebp]
	mov	WORD PTR [ecx], ax
; Line 354
	mov	eax, DWORD PTR _n$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?sortSortedString@FontCache@touchgfx@@AAE_NH@Z ; touchgfx::FontCache::sortSortedString
$LN1@createSort:
; Line 355
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ENDP	; touchgfx::FontCache::createSortedString
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
_TEXT	SEGMENT
tv165 = -340						; size = 4
tv92 = -340						; size = 4
$T2 = -329						; size = 1
_ch$3 = -128						; size = 2
_outOfMemory$ = -113					; size = 1
_firstNewGlyph$ = -104					; size = 4
_last$ = -92						; size = 2
_string$ = -80						; size = 4
_bpp$ = -68						; size = 4
_fontId$ = -56						; size = 2
_dummy$ = -44						; size = 4
_glyphNodeOffset$ = -32					; size = 4
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z PROC ; touchgfx::FontCache::cacheSortedString, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 185
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 328				; 00000148H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-148]
	mov	ecx, 34					; 00000022H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 186
	push	8
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 189
	push	4
	lea	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 190
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 191
	push	4
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 152				; 00000098H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 192
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 193
	push	4
	lea	eax, DWORD PTR _dummy$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 194
	push	2
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 156				; 0000009cH
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 196
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 197
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ; touchgfx::TypedText::getFont
	mov	DWORD PTR tv92[ebp], eax
	mov	eax, DWORD PTR tv92[ebp]
	mov	edx, DWORD PTR [eax]
	mov	esi, esp
	mov	ecx, DWORD PTR tv92[ebp]
	mov	eax, DWORD PTR [edx+48]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	movzx	ecx, al
	mov	DWORD PTR _bpp$[ebp], ecx
; Line 199
	mov	eax, DWORD PTR _glyphNodeOffset$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 200
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+158], ax
; Line 201
	xor	eax, eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	WORD PTR [ecx+164], ax
; Line 203
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+84]
	mov	DWORD PTR _string$[ebp], ecx
; Line 204
	xor	eax, eax
	mov	WORD PTR _last$[ebp], ax
; Line 205
	mov	DWORD PTR _firstNewGlyph$[ebp], 0
; Line 206
	mov	BYTE PTR _outOfMemory$[ebp], 0
$LN2@cacheSorte:
; Line 207
	mov	eax, DWORD PTR _string$[ebp]
	movzx	ecx, WORD PTR [eax]
	test	ecx, ecx
	je	SHORT $LN3@cacheSorte
; Line 209
	mov	eax, DWORD PTR _string$[ebp]
	mov	cx, WORD PTR [eax]
	mov	WORD PTR _ch$3[ebp], cx
; Line 210
	movzx	eax, WORD PTR _ch$3[ebp]
	movzx	ecx, WORD PTR _last$[ebp]
	cmp	eax, ecx
	je	SHORT $LN4@cacheSorte
; Line 212
	movzx	eax, WORD PTR _fontId$[ebp]
	push	eax
	movzx	ecx, WORD PTR _ch$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?contains@FontCache@touchgfx@@ABE_NGG@Z	; touchgfx::FontCache::contains
	movzx	edx, al
	test	edx, edx
	jne	SHORT $LN4@cacheSorte
; Line 214
	lea	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fontId$[ebp]
	push	edx
	movzx	eax, WORD PTR _ch$3[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z ; touchgfx::FontCache::insert
; Line 215
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	je	SHORT $LN6@cacheSorte
; Line 217
	jmp	SHORT $LN3@cacheSorte
$LN6@cacheSorte:
; Line 219
	cmp	DWORD PTR _firstNewGlyph$[ebp], 0
	jne	SHORT $LN4@cacheSorte
; Line 221
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	mov	DWORD PTR _firstNewGlyph$[ebp], edx
$LN4@cacheSorte:
; Line 225
	mov	ax, WORD PTR _ch$3[ebp]
	mov	WORD PTR _last$[ebp], ax
; Line 226
	mov	eax, DWORD PTR _string$[ebp]
	add	eax, 2
	mov	DWORD PTR _string$[ebp], eax
; Line 227
	jmp	$LN2@cacheSorte
$LN3@cacheSorte:
; Line 229
	mov	eax, DWORD PTR _firstNewGlyph$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ; touchgfx::FontCache::cacheData
; Line 230
	movzx	eax, BYTE PTR _outOfMemory$[ebp]
	test	eax, eax
	jne	SHORT $LN9@cacheSorte
	mov	DWORD PTR tv165[ebp], 1
	jmp	SHORT $LN10@cacheSorte
$LN9@cacheSorte:
	mov	DWORD PTR tv165[ebp], 0
$LN10@cacheSorte:
	mov	cl, BYTE PTR tv165[ebp]
	mov	BYTE PTR $T2[ebp], cl
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
; Line 231
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN17@cacheSorte
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 340				; 00000154H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
	npad	3
$LN17@cacheSorte:
	DD	3
	DD	$LN16@cacheSorte
$LN16@cacheSorte:
	DD	-32					; ffffffe0H
	DD	4
	DD	$LN12@cacheSorte
	DD	-44					; ffffffd4H
	DD	4
	DD	$LN13@cacheSorte
	DD	-113					; ffffff8fH
	DD	1
	DD	$LN14@cacheSorte
$LN14@cacheSorte:
	DB	111					; 0000006fH
	DB	117					; 00000075H
	DB	116					; 00000074H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	77					; 0000004dH
	DB	101					; 00000065H
	DB	109					; 0000006dH
	DB	111					; 0000006fH
	DB	114					; 00000072H
	DB	121					; 00000079H
	DB	0
$LN13@cacheSorte:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN12@cacheSorte:
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	121					; 00000079H
	DB	112					; 00000070H
	DB	104					; 00000068H
	DB	78					; 0000004eH
	DB	111					; 0000006fH
	DB	100					; 00000064H
	DB	101					; 00000065H
	DB	79					; 0000004fH
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	115					; 00000073H
	DB	101					; 00000065H
	DB	116					; 00000074H
	DB	0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-344]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ENDP ; touchgfx::FontCache::cacheSortedString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z
_TEXT	SEGMENT
_next$1 = -56						; size = 4
_glyphSize$2 = -44					; size = 4
_p$3 = -32						; size = 4
_gn$ = -20						; size = 4
_this$ = -8						; size = 4
_bpp$ = 8						; size = 4
_first$ = 12						; size = 4
?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z PROC ; touchgfx::FontCache::cacheData, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 311
	push	ebp
	mov	ebp, esp
	sub	esp, 252				; 000000fcH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-60]
	mov	ecx, 15					; 0000000fH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 312
	mov	eax, DWORD PTR _first$[ebp]
	mov	DWORD PTR _gn$[ebp], eax
$LN2@cacheData:
; Line 313
	cmp	DWORD PTR _gn$[ebp], 0
	je	$LN1@cacheData
; Line 315
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR _p$3[ebp], eax
; Line 316
	mov	eax, DWORD PTR _gn$[ebp]
	cmp	DWORD PTR [eax], -1
	je	SHORT $LN4@cacheData
; Line 318
	mov	eax, DWORD PTR _p$3[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _p$3[ebp], eax
; Line 320
	mov	eax, DWORD PTR _p$3[ebp]
	add	eax, 4
	mov	DWORD PTR _p$3[ebp], eax
; Line 323
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+152]
	mov	edx, DWORD PTR _gn$[ebp]
	add	ecx, DWORD PTR [edx]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 324
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?width@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::width
	movzx	esi, ax
	add	esi, 1
	and	esi, -2					; fffffffeH
	mov	ecx, DWORD PTR _gn$[ebp]
	call	?height@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::height
	movzx	eax, ax
	imul	esi, eax
	imul	esi, DWORD PTR _bpp$[ebp]
	shr	esi, 3
	mov	DWORD PTR _glyphSize$2[ebp], esi
; Line 325
	mov	eax, DWORD PTR _glyphSize$2[ebp]
	push	eax
	mov	ecx, DWORD PTR _p$3[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 328
	mov	eax, DWORD PTR _gn$[ebp]
	mov	DWORD PTR [eax], -1
$LN4@cacheData:
; Line 331
	mov	eax, DWORD PTR _gn$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 332
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _gn$[ebp], ecx
; Line 333
	jmp	$LN2@cacheData
$LN1@cacheData:
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 252				; 000000fcH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?cacheData@FontCache@touchgfx@@AAEXIPAUGlyphNode@2@@Z ENDP ; touchgfx::FontCache::cacheData
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z
_TEXT	SEGMENT
_next$ = -44						; size = 4
_requiredMem$ = -32					; size = 4
_glyphSize$ = -20					; size = 4
_this$ = -8						; size = 4
_top$ = 8						; size = 4
_unicode$ = 12						; size = 2
_font$ = 16						; size = 2
_bpp$ = 20						; size = 4
_outOfMemory$ = 24					; size = 4
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z PROC	; touchgfx::FontCache::copyGlyph, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 277
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
$LN2@copyGlyph:
; Line 278
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+158]
	mov	edx, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [edx+156]
	cmp	ecx, eax
	jge	SHORT $LN3@copyGlyph
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+164]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jge	SHORT $LN3@copyGlyph
; Line 280
	push	14					; 0000000eH
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 281
	mov	eax, DWORD PTR _this$[ebp]
	mov	cx, WORD PTR [eax+158]
	add	cx, 1
	mov	edx, DWORD PTR _this$[ebp]
	mov	WORD PTR [edx+158], cx
; Line 282
	jmp	SHORT $LN2@copyGlyph
$LN3@copyGlyph:
; Line 283
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+164]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	je	SHORT $LN4@copyGlyph
; Line 286
	mov	eax, DWORD PTR _top$[ebp]
	jmp	$LN1@copyGlyph
$LN4@copyGlyph:
; Line 290
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	?width@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::width
	movzx	esi, ax
	add	esi, 1
	and	esi, -2					; fffffffeH
	mov	ecx, DWORD PTR _this$[ebp]
	add	ecx, 160				; 000000a0H
	call	?height@GlyphNode@touchgfx@@QBEGXZ	; touchgfx::GlyphNode::height
	movzx	eax, ax
	imul	esi, eax
	imul	esi, DWORD PTR _bpp$[ebp]
	shr	esi, 3
	mov	DWORD PTR _glyphSize$[ebp], esi
; Line 291
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 3
	and	eax, -4					; fffffffcH
	mov	DWORD PTR _glyphSize$[ebp], eax
; Line 292
	mov	eax, DWORD PTR _glyphSize$[ebp]
	add	eax, 20					; 00000014H
	mov	DWORD PTR _requiredMem$[ebp], eax
; Line 295
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+84]
	jbe	SHORT $LN5@copyGlyph
; Line 297
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	mov	BYTE PTR [eax], 1
; Line 298
	mov	eax, DWORD PTR _top$[ebp]
	jmp	SHORT $LN1@copyGlyph
$LN5@copyGlyph:
; Line 301
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 160				; 000000a0H
	mov	ecx, DWORD PTR _top$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	DWORD PTR [ecx], edx
	mov	edx, DWORD PTR [eax+4]
	mov	DWORD PTR [ecx+4], edx
	mov	edx, DWORD PTR [eax+8]
	mov	DWORD PTR [ecx+8], edx
	mov	ax, WORD PTR [eax+12]
	mov	WORD PTR [ecx+12], ax
; Line 304
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$[ebp], eax
; Line 305
	mov	eax, DWORD PTR _next$[ebp]
	mov	DWORD PTR [eax], 0
; Line 306
	mov	eax, DWORD PTR _top$[ebp]
	add	eax, DWORD PTR _requiredMem$[ebp]
	mov	DWORD PTR _top$[ebp], eax
; Line 307
	mov	eax, DWORD PTR _top$[ebp]
$LN1@copyGlyph:
; Line 308
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	20					; 00000014H
?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ENDP	; touchgfx::FontCache::copyGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z
_TEXT	SEGMENT
_old_next$1 = -32					; size = 4
_oldTop$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
_bpp$ = 16						; size = 4
_outOfMemory$ = 20					; size = 4
?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z PROC		; touchgfx::FontCache::insert, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 249
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 251
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	DWORD PTR _oldTop$[ebp], ecx
; Line 252
	mov	eax, DWORD PTR _outOfMemory$[ebp]
	push	eax
	mov	ecx, DWORD PTR _bpp$[ebp]
	push	ecx
	movzx	edx, WORD PTR _font$[ebp]
	push	edx
	movzx	eax, WORD PTR _unicode$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+72]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?copyGlyph@FontCache@touchgfx@@AAEPAEPAEGGIAA_N@Z ; touchgfx::FontCache::copyGlyph
	mov	ecx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [ecx+72], eax
; Line 254
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	cmp	ecx, DWORD PTR _oldTop$[ebp]
	jne	SHORT $LN2@insert
; Line 256
	jmp	SHORT $LN1@insert
$LN2@insert:
; Line 259
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [ecx+eax*8+4], 0
	jne	SHORT $LN3@insert
; Line 262
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8], edx
; Line 263
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
; Line 264
	jmp	SHORT $LN1@insert
$LN3@insert:
; Line 268
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8+4]
	add	edx, 16					; 00000010H
	mov	DWORD PTR _old_next$1[ebp], edx
; Line 269
	mov	eax, DWORD PTR _old_next$1[ebp]
	mov	ecx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [eax], ecx
; Line 272
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR _oldTop$[ebp]
	mov	DWORD PTR [ecx+eax*8+4], edx
$LN1@insert:
; Line 274
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
?insert@FontCache@touchgfx@@AAEXGGIAA_N@Z ENDP		; touchgfx::FontCache::insert
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?contains@FontCache@touchgfx@@ABE_NGG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?contains@FontCache@touchgfx@@ABE_NGG@Z PROC		; touchgfx::FontCache::contains, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 234
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 235
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@contains:
; Line 236
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@contains
; Line 238
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@contains
; Line 240
	mov	al, 1
	jmp	SHORT $LN1@contains
$LN4@contains:
; Line 242
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 243
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 244
	jmp	SHORT $LN2@contains
$LN3@contains:
; Line 245
	xor	al, al
$LN1@contains:
; Line 246
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?contains@FontCache@touchgfx@@ABE_NGG@Z ENDP		; touchgfx::FontCache::contains
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?close@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?close@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::close, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 72
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 73
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@close
; Line 75
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [eax+8]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@close:
; Line 77
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?close@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::close
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?open@FontCache@touchgfx@@QAEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?open@FontCache@touchgfx@@QAEXXZ PROC			; touchgfx::FontCache::open, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 64
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 65
	mov	eax, DWORD PTR _this$[ebp]
	cmp	DWORD PTR [eax+80], 0
	je	SHORT $LN1@open
; Line 67
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+80]
	mov	edx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [ecx]
	mov	esi, esp
	mov	ecx, DWORD PTR [edx+80]
	mov	edx, DWORD PTR [eax+4]
	call	edx
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@open:
; Line 69
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?open@FontCache@touchgfx@@QAEXXZ ENDP			; touchgfx::FontCache::open
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z
_TEXT	SEGMENT
_next$1 = -32						; size = 4
_g$ = -20						; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
_font$ = 12						; size = 2
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z PROC ; touchgfx::FontCache::getGlyph, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 49
	push	ebp
	mov	ebp, esp
	sub	esp, 228				; 000000e4H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-36]
	mov	ecx, 9
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 50
	movzx	eax, WORD PTR _font$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+eax*8]
	mov	DWORD PTR _g$[ebp], edx
$LN2@getGlyph:
; Line 51
	cmp	DWORD PTR _g$[ebp], 0
	je	SHORT $LN3@getGlyph
; Line 53
	mov	eax, DWORD PTR _g$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR _unicode$[ebp]
	cmp	ecx, edx
	jne	SHORT $LN4@getGlyph
; Line 55
	mov	eax, DWORD PTR _g$[ebp]
	jmp	SHORT $LN1@getGlyph
$LN4@getGlyph:
; Line 57
	mov	eax, DWORD PTR _g$[ebp]
	add	eax, 16					; 00000010H
	mov	DWORD PTR _next$1[ebp], eax
; Line 58
	mov	eax, DWORD PTR _next$1[ebp]
	mov	ecx, DWORD PTR [eax]
	mov	DWORD PTR _g$[ebp], ecx
; Line 59
	jmp	SHORT $LN2@getGlyph
$LN3@getGlyph:
; Line 60
	xor	eax, eax
$LN1@getGlyph:
; Line 61
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 228				; 000000e4H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getGlyph@FontCache@touchgfx@@QBEPBUGlyphNode@2@GG@Z ENDP ; touchgfx::FontCache::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
_TEXT	SEGMENT
tv148 = -277						; size = 1
tv67 = -277						; size = 1
$T2 = -269						; size = 1
$T3 = -260						; size = 4
$T4 = -245						; size = 1
$T5 = -236						; size = 4
_result$ = -29						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_font$ = 8						; size = 4
_t$ = 12						; size = 8
_string$ = 20						; size = 4
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheLigatures, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 172
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 268				; 0000010cH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-88]
	mov	ecx, 19					; 00000013H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 173
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 174
	push	0
	push	0
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T5[ebp], esp
	lea	edx, DWORD PTR _t$[ebp]
	push	edx
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	eax, DWORD PTR _font$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	call	?createSortedLigatures@FontCache@touchgfx@@AAA_NPAVCachedFont@2@VTypedText@2@PBGZZ ; touchgfx::FontCache::createSortedLigatures
	add	esp, 28					; 0000001cH
	mov	BYTE PTR tv67[ebp], al
	movzx	edx, BYTE PTR tv67[ebp]
	test	edx, edx
	jne	SHORT $LN2@cacheLigat
; Line 176
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 177
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	SHORT $LN1@cacheLigat
$LN2@cacheLigat:
; Line 179
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR tv148[ebp], al
	mov	cl, BYTE PTR tv148[ebp]
	mov	BYTE PTR _result$[ebp], cl
; Line 180
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 181
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@cacheLigat:
; Line 182
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 280				; 00000118H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-284]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheLigatures@FontCache@touchgfx@@QAE_NPAVCachedFont@2@VTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheLigatures
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
_TEXT	SEGMENT
tv94 = -265						; size = 1
$T2 = -257						; size = 1
$T3 = -248						; size = 4
$T4 = -233						; size = 1
_result$ = -29						; size = 1
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
_string$ = 16						; size = 4
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z PROC ; touchgfx::FontCache::cacheString, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 159
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 256				; 00000100H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-76]
	mov	ecx, 16					; 00000010H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 160
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 161
	mov	eax, DWORD PTR _string$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?createSortedString@FontCache@touchgfx@@AAE_NPBG@Z ; touchgfx::FontCache::createSortedString
	movzx	ecx, al
	test	ecx, ecx
	jne	SHORT $LN2@cacheStrin
; Line 163
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 164
	mov	BYTE PTR $T4[ebp], 0
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T4[ebp]
	jmp	SHORT $LN1@cacheStrin
$LN2@cacheStrin:
; Line 166
	sub	esp, 8
	mov	ecx, esp
	mov	DWORD PTR $T3[ebp], esp
	lea	eax, DWORD PTR _t$[ebp]
	push	eax
	call	??0TypedText@touchgfx@@QAE@ABV01@@Z
	mov	ecx, DWORD PTR _this$[ebp]
	call	?cacheSortedString@FontCache@touchgfx@@AAE_NVTypedText@2@@Z ; touchgfx::FontCache::cacheSortedString
	mov	BYTE PTR tv94[ebp], al
	mov	cl, BYTE PTR tv94[ebp]
	mov	BYTE PTR _result$[ebp], cl
; Line 167
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 168
	mov	al, BYTE PTR _result$[ebp]
	mov	BYTE PTR $T2[ebp], al
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	al, BYTE PTR $T2[ebp]
$LN1@cacheStrin:
; Line 169
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 268				; 0000010cH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	12					; 0000000cH
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-272]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?cacheString@FontCache@touchgfx@@QAE_NVTypedText@2@PBG@Z ENDP ; touchgfx::FontCache::cacheString
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
_TEXT	SEGMENT
tv253 = -388						; size = 4
tv137 = -388						; size = 4
$T2 = -380						; size = 52
_base$3 = -128						; size = 4
_table$4 = -116						; size = 4
_sizeTableData$5 = -104					; size = 4
_gsubPosition$6 = -92					; size = 4
_sizeOfGSUB$7 = -80					; size = 4
_flashFont$ = -68					; size = 4
_flashFonts$ = -56					; size = 4
_binaryFontData$ = -44					; size = 4
_fontId$ = -32						; size = 2
_this$ = -20						; size = 4
__$EHRec$ = -12						; size = 12
_t$ = 8							; size = 8
_font$ = 16						; size = 4
_loadGsubOrContextTable$ = 20				; size = 1
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z PROC ; touchgfx::FontCache::initializeCachedFont, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 80
	push	ebp
	mov	ebp, esp
	push	-1
	push	__ehhandler$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	mov	eax, DWORD PTR fs:0
	push	eax
	sub	esp, 376				; 00000178H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-196]
	mov	ecx, 46					; 0000002eH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	push	eax
	lea	eax, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, eax
	mov	DWORD PTR _this$[ebp], ecx
	mov	DWORD PTR __$EHRec$[ebp+8], 0
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 82
	lea	ecx, DWORD PTR _t$[ebp]
	call	?getFontId@TypedText@touchgfx@@QBEGXZ	; touchgfx::TypedText::getFontId
	mov	WORD PTR _fontId$[ebp], ax
; Line 84
	mov	ecx, DWORD PTR _this$[ebp]
	call	?open@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::open
; Line 85
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 88
	push	40					; 00000028H
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 89
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	mov	DWORD PTR _binaryFontData$[ebp], eax
; Line 91
	call	?getFonts@TypedTextDatabase@@YAPAPBVFont@touchgfx@@XZ ; TypedTextDatabase::getFonts
	mov	DWORD PTR _flashFonts$[ebp], eax
; Line 92
	movzx	eax, WORD PTR _fontId$[ebp]
	mov	ecx, DWORD PTR _flashFonts$[ebp]
	mov	edx, DWORD PTR [ecx+eax*4]
	mov	DWORD PTR _flashFont$[ebp], edx
; Line 93
	mov	eax, DWORD PTR _flashFont$[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	push	ecx
	movzx	edx, WORD PTR _fontId$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	add	eax, 88					; 00000058H
	push	eax
	lea	ecx, DWORD PTR $T2[ebp]
	call	??0CachedFont@touchgfx@@QAE@PBUBinaryFontData@1@GPAVFontCache@1@PBVGeneratedFont@1@@Z ; touchgfx::CachedFont::CachedFont
	mov	DWORD PTR tv253[ebp], eax
	mov	ecx, DWORD PTR tv253[ebp]
	push	ecx
	mov	ecx, DWORD PTR _font$[ebp]
	call	??4CachedFont@touchgfx@@QAEAAV01@$$QAV01@@Z
	lea	ecx, DWORD PTR $T2[ebp]
	call	??1CachedFont@touchgfx@@UAE@XZ
; Line 95
	movzx	eax, BYTE PTR _loadGsubOrContextTable$[ebp]
	test	eax, eax
	je	$LN2@initialize
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+20], 0
	je	$LN2@initialize
; Line 97
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+20]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 99
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	SHORT $LN9@initialize
	mov	ecx, DWORD PTR _binaryFontData$[ebp]
	mov	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR tv137[ebp], edx
	jmp	SHORT $LN10@initialize
$LN9@initialize:
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+4]
	mov	DWORD PTR tv137[ebp], ecx
$LN10@initialize:
	mov	edx, DWORD PTR _binaryFontData$[ebp]
	mov	eax, DWORD PTR tv137[ebp]
	sub	eax, DWORD PTR [edx+20]
	mov	DWORD PTR _sizeOfGSUB$7[ebp], eax
; Line 101
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	add	ecx, DWORD PTR _sizeOfGSUB$7[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	cmp	ecx, DWORD PTR [edx+76]
	jae	SHORT $LN3@initialize
; Line 103
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, DWORD PTR _sizeOfGSUB$7[ebp]
	mov	DWORD PTR _gsubPosition$6[ebp], ecx
; Line 104
	mov	eax, DWORD PTR _sizeOfGSUB$7[ebp]
	push	eax
	mov	ecx, DWORD PTR _gsubPosition$6[ebp]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 105
	mov	esi, esp
	mov	eax, DWORD PTR _gsubPosition$6[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 106
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, DWORD PTR _sizeOfGSUB$7[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 109
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, -4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 110
	jmp	SHORT $LN2@initialize
$LN3@initialize:
; Line 113
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+76]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN2@initialize:
; Line 117
	movzx	eax, BYTE PTR _loadGsubOrContextTable$[ebp]
	test	eax, eax
	je	$LN5@initialize
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	cmp	DWORD PTR [eax+24], 0
	je	$LN5@initialize
; Line 119
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR [eax+24]
	push	ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?setPosition@FontCache@touchgfx@@AAEXI@Z ; touchgfx::FontCache::setPosition
; Line 121
	mov	eax, DWORD PTR _binaryFontData$[ebp]
	mov	ecx, DWORD PTR _binaryFontData$[ebp]
	mov	edx, DWORD PTR [eax+4]
	sub	edx, DWORD PTR [ecx+24]
	mov	DWORD PTR _sizeTableData$5[ebp], edx
; Line 123
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+72]
	mov	edx, DWORD PTR _sizeTableData$5[ebp]
	lea	eax, DWORD PTR [ecx+edx+32]
	mov	ecx, DWORD PTR _this$[ebp]
	cmp	eax, DWORD PTR [ecx+76]
	jae	$LN6@initialize
; Line 126
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, 32					; 00000020H
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 128
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, -4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 130
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _table$4[ebp], ecx
; Line 131
	mov	esi, esp
	mov	eax, DWORD PTR _table$4[ebp]
	push	eax
	mov	ecx, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [ecx]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
; Line 132
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	sub	ecx, DWORD PTR _sizeTableData$5[ebp]
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
; Line 133
	mov	eax, DWORD PTR _sizeTableData$5[ebp]
	push	eax
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+76]
	push	edx
	mov	ecx, DWORD PTR _this$[ebp]
	call	?readData@FontCache@touchgfx@@AAEXPAXI@Z ; touchgfx::FontCache::readData
; Line 136
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	mov	DWORD PTR _base$3[ebp], ecx
; Line 138
	mov	eax, 2
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax], edx
; Line 139
	mov	eax, 2
	shl	eax, 0
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+4], ecx
; Line 140
	mov	eax, 2
	shl	eax, 1
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+8], ecx
; Line 141
	mov	eax, 2
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax+12], edx
; Line 142
	mov	eax, 2
	shl	eax, 2
	mov	ecx, DWORD PTR _base$3[ebp]
	movzx	edx, WORD PTR [ecx+eax]
	mov	eax, DWORD PTR _base$3[ebp]
	lea	ecx, DWORD PTR [eax+edx*2]
	mov	edx, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [edx+16], ecx
; Line 143
	mov	eax, 2
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _base$3[ebp]
	movzx	eax, WORD PTR [edx+ecx]
	mov	ecx, DWORD PTR _base$3[ebp]
	lea	edx, DWORD PTR [ecx+eax*2]
	mov	eax, DWORD PTR _table$4[ebp]
	mov	DWORD PTR [eax+20], edx
; Line 144
	mov	eax, 2
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+24], cx
; Line 145
	mov	eax, 2
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+26], cx
; Line 146
	mov	eax, 2
	shl	eax, 3
	mov	ecx, DWORD PTR _table$4[ebp]
	mov	edx, DWORD PTR _base$3[ebp]
	mov	ax, WORD PTR [edx+eax]
	mov	WORD PTR [ecx+28], ax
; Line 147
	mov	eax, 2
	imul	ecx, eax, 9
	mov	edx, DWORD PTR _table$4[ebp]
	mov	eax, DWORD PTR _base$3[ebp]
	mov	cx, WORD PTR [eax+ecx]
	mov	WORD PTR [edx+30], cx
; Line 148
	jmp	SHORT $LN5@initialize
$LN6@initialize:
; Line 151
	mov	esi, esp
	push	0
	mov	eax, DWORD PTR _font$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _font$[ebp]
	mov	eax, DWORD PTR [edx+80]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN5@initialize:
; Line 155
	mov	ecx, DWORD PTR _this$[ebp]
	call	?close@FontCache@touchgfx@@QAEXXZ	; touchgfx::FontCache::close
; Line 156
	mov	DWORD PTR __$EHRec$[ebp+8], -1
	lea	ecx, DWORD PTR _t$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	ecx, DWORD PTR __$EHRec$[ebp]
	mov	DWORD PTR fs:0, ecx
	pop	ecx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 388				; 00000184H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	16					; 00000010H
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z$0:
	lea	ecx, DWORD PTR _t$[ebp]
	jmp	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	int	3
	int	3
	int	3
	int	3
	int	3
__ehhandler$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z:
	npad	1
	npad	1
	mov	edx, DWORD PTR [esp+8]
	lea	eax, DWORD PTR [edx+12]
	mov	ecx, DWORD PTR [edx-392]
	xor	ecx, eax
	call	@__security_check_cookie@4
	mov	eax, OFFSET __ehfuncinfo$?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z
	jmp	___CxxFrameHandler3
text$x	ENDS
?initializeCachedFont@FontCache@touchgfx@@QAEXVTypedText@2@PAVCachedFont@2@_N@Z ENDP ; touchgfx::FontCache::initializeCachedFont
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setMemory@FontCache@touchgfx@@QAEXPAEI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__memory$ = 8						; size = 4
_size$ = 12						; size = 4
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z PROC		; touchgfx::FontCache::setMemory, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 36
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 37
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __memory$[ebp]
	mov	DWORD PTR [eax+68], ecx
; Line 38
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _size$[ebp]
	mov	DWORD PTR [eax+64], ecx
; Line 40
	push	0
	mov	ecx, DWORD PTR _this$[ebp]
	call	?clear@FontCache@touchgfx@@QAEX_N@Z	; touchgfx::FontCache::clear
; Line 41
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?setMemory@FontCache@touchgfx@@QAEXPAEI@Z ENDP		; touchgfx::FontCache::setMemory
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?clear@FontCache@touchgfx@@QAEX_N@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_keepGsubOrContextTable$ = 8				; size = 1
?clear@FontCache@touchgfx@@QAEX_N@Z PROC		; touchgfx::FontCache::clear, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 19
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 20
	push	64					; 00000040H
	push	0
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	?memset@touchgfx@@YAXPAXEI@Z		; touchgfx::memset
	add	esp, 12					; 0000000cH
; Line 23
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [ecx+68]
	mov	DWORD PTR [eax+72], edx
; Line 25
	movzx	eax, BYTE PTR _keepGsubOrContextTable$[ebp]
	test	eax, eax
	jne	SHORT $LN1@clear
; Line 28
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+68]
	mov	edx, DWORD PTR _this$[ebp]
	add	ecx, DWORD PTR [edx+64]
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], ecx
; Line 31
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR [eax+76]
	and	ecx, -4					; fffffffcH
	mov	edx, DWORD PTR _this$[ebp]
	mov	DWORD PTR [edx+76], ecx
$LN1@clear:
; Line 33
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?clear@FontCache@touchgfx@@QAEX_N@Z ENDP		; touchgfx::FontCache::clear
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
__reader$ = 8						; size = 4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z PROC ; touchgfx::FontCache::setReader, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 44
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 45
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR __reader$[ebp]
	mov	DWORD PTR [eax+80], ecx
; Line 46
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
?setReader@FontCache@touchgfx@@QAEXPAVFontDataReader@2@@Z ENDP ; touchgfx::FontCache::setReader
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0FontCache@touchgfx@@QAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??0FontCache@touchgfx@@QAE@XZ PROC			; touchgfx::FontCache::FontCache, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\TouchGFX\generated\fonts\src\FontCache.cpp
; Line 15
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __5A650CE3_FontCache@cpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 14
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+64], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+68], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+72], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+76], 0
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax+80], 0
; Line 16
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??0FontCache@touchgfx@@QAE@XZ ENDP			; touchgfx::FontCache::FontCache
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GTypedText@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GTypedText@touchgfx@@UAEPAXI@Z PROC			; touchgfx::TypedText::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1TypedText@touchgfx@@UAE@XZ		; touchgfx::TypedText::~TypedText
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	8
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GTypedText@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::TypedText::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??0TypedText@touchgfx@@QAE@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??0TypedText@touchgfx@@QAE@ABV01@@Z PROC		; touchgfx::TypedText::TypedText, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TypedText@touchgfx@@6B@
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??0TypedText@touchgfx@@QAE@ABV01@@Z ENDP		; touchgfx::TypedText::TypedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?assertValid@TypedText@touchgfx@@ABEXXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?assertValid@TypedText@touchgfx@@ABEXXZ PROC		; touchgfx::TypedText::assertValid, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 173
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __38F934C6_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 174
	cmp	DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B, 0 ; touchgfx::TypedText::typedTexts
	je	SHORT $LN3@assertVali
	mov	eax, OFFSET ??_C@_0CN@OFCNDKEN@TypedText?5database?5has?5not?5been@
	test	eax, eax
	jne	SHORT $LN4@assertVali
$LN3@assertVali:
	mov	esi, esp
	push	174					; 000000aeH
	push	OFFSET ??_C@_1NG@EDAKDIEI@?$AAG?$AA?3?$AA?2?$AAG?$AAe?$AAr?$AAm?$AAa?$AAn?$AAy?$AA?2?$AAS?$AAc?$AAa?$AAn@
	push	OFFSET ??_C@_1IE@NPIIMJBA@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAs?$AA?5?$AA?$CB?$AA?$DN?$AA?5?$AA0@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN4@assertVali:
; Line 175
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	movzx	edx, WORD PTR ?numberOfTypedTexts@TypedText@touchgfx@@0GA ; touchgfx::TypedText::numberOfTypedTexts
	cmp	ecx, edx
	jge	SHORT $LN5@assertVali
	mov	eax, OFFSET ??_C@_0CM@IOAPKHHD@typedTextId?5larger?5than?5numberO@
	test	eax, eax
	jne	SHORT $LN1@assertVali
$LN5@assertVali:
	mov	esi, esp
	push	175					; 000000afH
	push	OFFSET ??_C@_1NG@EDAKDIEI@?$AAG?$AA?3?$AA?2?$AAG?$AAe?$AAr?$AAm?$AAa?$AAn?$AAy?$AA?2?$AAS?$AAc?$AAa?$AAn@
	push	OFFSET ??_C@_1KE@IMIJNMJM@?$AAt?$AAy?$AAp?$AAe?$AAd?$AAT?$AAe?$AAx?$AAt?$AAI?$AAd?$AA?5?$AA?$DM?$AA?5?$AAn@
	call	DWORD PTR __imp___wassert
	add	esp, 12					; 0000000cH
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN1@assertVali:
; Line 176
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?assertValid@TypedText@touchgfx@@ABEXXZ ENDP		; touchgfx::TypedText::assertValid
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getTextDirection@TypedText@touchgfx@@QBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getTextDirection@TypedText@touchgfx@@QBEEXZ PROC	; touchgfx::TypedText::getTextDirection, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 139
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __38F934C6_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 140
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 141
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	mov	al, BYTE PTR [edx+ecx*2+1]
	shr	al, 2
	and	al, 3
; Line 142
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getTextDirection@TypedText@touchgfx@@QBEEXZ ENDP	; touchgfx::TypedText::getTextDirection
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontId@TypedText@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontId@TypedText@touchgfx@@QBEGXZ PROC		; touchgfx::TypedText::getFontId, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 117
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __38F934C6_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 118
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 119
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	ax, BYTE PTR [edx+ecx*2]
; Line 120
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontId@TypedText@touchgfx@@QBEGXZ ENDP		; touchgfx::TypedText::getFontId
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ PROC	; touchgfx::TypedText::getFont, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 106
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __38F934C6_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 107
	mov	ecx, DWORD PTR _this$[ebp]
	call	?assertValid@TypedText@touchgfx@@ABEXXZ	; touchgfx::TypedText::assertValid
; Line 108
	mov	eax, DWORD PTR _this$[ebp]
	movzx	ecx, WORD PTR [eax+4]
	mov	edx, DWORD PTR ?typedTexts@TypedText@touchgfx@@0PBUTypedTextData@12@B ; touchgfx::TypedText::typedTexts
	movzx	eax, BYTE PTR [edx+ecx*2]
	mov	ecx, DWORD PTR ?fonts@TypedText@touchgfx@@0PBQBVFont@2@B ; touchgfx::TypedText::fonts
	mov	eax, DWORD PTR [ecx+eax*4]
; Line 109
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFont@TypedText@touchgfx@@QBEPBVFont@2@XZ ENDP	; touchgfx::TypedText::getFont
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1TypedText@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1TypedText@touchgfx@@UAE@XZ PROC			; touchgfx::TypedText::~TypedText, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\TypedText.hpp
; Line 66
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __38F934C6_TypedText@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7TypedText@touchgfx@@6B@
; Line 67
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1TypedText@touchgfx@@UAE@XZ ENDP			; touchgfx::TypedText::~TypedText
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??_GFont@touchgfx@@UAEPAXI@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___flags$ = 8						; size = 4
??_GFont@touchgfx@@UAEPAXI@Z PROC			; touchgfx::Font::`scalar deleting destructor', COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, DWORD PTR _this$[ebp]
	call	??1Font@touchgfx@@UAE@XZ		; touchgfx::Font::~Font
	mov	eax, DWORD PTR ___flags$[ebp]
	and	eax, 1
	je	SHORT $LN2@scalar
	push	16					; 00000010H
	mov	eax, DWORD PTR _this$[ebp]
	push	eax
	call	??3@YAXPAXI@Z				; operator delete
	add	esp, 8
$LN2@scalar:
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
??_GFont@touchgfx@@UAEPAXI@Z ENDP			; touchgfx::Font::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??4Font@touchgfx@@QAEAAV01@ABV01@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
___that$ = 8						; size = 4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z PROC		; touchgfx::Font::operator=, COMDAT
; _this$ = ecx
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	mov	DWORD PTR _this$[ebp], ecx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+4]
	mov	WORD PTR [eax+4], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+6]
	mov	BYTE PTR [eax+6], dl
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+7]
	and	cl, 127					; 0000007fH
	and	cl, 127					; 0000007fH
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+7]
	and	al, 128					; 00000080H
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+7], al
	mov	eax, DWORD PTR ___that$[ebp]
	mov	cl, BYTE PTR [eax+7]
	shr	cl, 7
	and	cl, 1
	and	cl, 1
	shl	cl, 7
	mov	edx, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [edx+7]
	and	al, 127					; 0000007fH
	or	al, cl
	mov	ecx, DWORD PTR _this$[ebp]
	mov	BYTE PTR [ecx+7], al
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+8]
	mov	BYTE PTR [eax+8], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dl, BYTE PTR [ecx+9]
	mov	BYTE PTR [eax+9], dl
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+10]
	mov	WORD PTR [eax+10], dx
	mov	eax, DWORD PTR _this$[ebp]
	mov	ecx, DWORD PTR ___that$[ebp]
	mov	dx, WORD PTR [ecx+12]
	mov	WORD PTR [eax+12], dx
	mov	eax, DWORD PTR _this$[ebp]
	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	4
??4Font@touchgfx@@QAEAAV01@ABV01@@Z ENDP		; touchgfx::Font::operator=
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ PROC ; touchgfx::Font::getContextualFormsTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 419
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 420
	xor	eax, eax
; Line 421
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getContextualFormsTable@Font@touchgfx@@UBEPBUFontContextualFormsTable@2@XZ ENDP ; touchgfx::Font::getContextualFormsTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGSUBTable@Font@touchgfx@@UBEPBGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getGSUBTable@Font@touchgfx@@UBEPBGXZ PROC		; touchgfx::Font::getGSUBTable, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 409
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 410
	xor	eax, eax
; Line 411
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getGSUBTable@Font@touchgfx@@UBEPBGXZ ENDP		; touchgfx::Font::getGSUBTable
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z
_TEXT	SEGMENT
_this$ = -8						; size = 4
_prevChar$ = 8						; size = 2
_glyph$ = 12						; size = 4
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z PROC	; touchgfx::Font::getKerning, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 389
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 390
	xor	al, al
; Line 391
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	8
?getKerning@Font@touchgfx@@UBECGPBUGlyphNode@2@@Z ENDP	; touchgfx::Font::getKerning
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getByteAlignRow@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getByteAlignRow@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getByteAlignRow, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 352
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 353
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	shr	al, 7
	and	al, 1
; Line 354
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getByteAlignRow@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getByteAlignRow
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getBitsPerPixel@Font@touchgfx@@UBEEXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getBitsPerPixel@Font@touchgfx@@UBEEXZ PROC		; touchgfx::Font::getBitsPerPixel, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 342
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 343
	mov	eax, DWORD PTR _this$[ebp]
	mov	al, BYTE PTR [eax+7]
	and	al, 127					; 0000007fH
; Line 344
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getBitsPerPixel@Font@touchgfx@@UBEEXZ ENDP		; touchgfx::Font::getBitsPerPixel
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getMinimumTextHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ PROC	; touchgfx::Font::getMinimumTextHeight, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 332
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 333
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, WORD PTR [eax+4]
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	add	eax, edx
; Line 334
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getMinimumTextHeight@Font@touchgfx@@UBEGXZ ENDP	; touchgfx::Font::getMinimumTextHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFontHeight@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFontHeight@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFontHeight, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 320
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 321
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+4]
; Line 322
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFontHeight@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFontHeight
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getEllipsisChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getEllipsisChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getEllipsisChar, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 231
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 232
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+12]
; Line 233
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getEllipsisChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getEllipsisChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getFallbackChar@Font@touchgfx@@UBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?getFallbackChar@Font@touchgfx@@UBEGXZ PROC		; touchgfx::Font::getFallbackChar, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 218
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 219
	mov	eax, DWORD PTR _this$[ebp]
	mov	ax, WORD PTR [eax+10]
; Line 220
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?getFallbackChar@Font@touchgfx@@UBEGXZ ENDP		; touchgfx::Font::getFallbackChar
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z
_TEXT	SEGMENT
_glyph$ = -44						; size = 4
_bitsPerPixelDummy$ = -29				; size = 1
_dummyPixelDataPointer$ = -20				; size = 4
_this$ = -8						; size = 4
_unicode$ = 8						; size = 2
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z PROC	; touchgfx::Font::getGlyph, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 199
	push	ebp
	mov	ebp, esp
	sub	esp, 240				; 000000f0H
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-48]
	mov	ecx, 12					; 0000000cH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 200
	movzx	eax, WORD PTR _unicode$[ebp]
	test	eax, eax
	jne	SHORT $LN2@getGlyph
; Line 202
	xor	eax, eax
	jmp	SHORT $LN1@getGlyph
$LN2@getGlyph:
; Line 204
	mov	DWORD PTR _dummyPixelDataPointer$[ebp], 0
; Line 205
	mov	BYTE PTR _bitsPerPixelDummy$[ebp], 0
; Line 206
	mov	esi, esp
	lea	eax, DWORD PTR _bitsPerPixelDummy$[ebp]
	push	eax
	lea	ecx, DWORD PTR _dummyPixelDataPointer$[ebp]
	push	ecx
	movzx	edx, WORD PTR _unicode$[ebp]
	push	edx
	mov	eax, DWORD PTR _this$[ebp]
	mov	edx, DWORD PTR [eax]
	mov	ecx, DWORD PTR _this$[ebp]
	mov	eax, DWORD PTR [edx+8]
	call	eax
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _glyph$[ebp], eax
; Line 207
	mov	eax, DWORD PTR _glyph$[ebp]
$LN1@getGlyph:
; Line 208
	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@getGlyph
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 240				; 000000f0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	4
	npad	3
$LN7@getGlyph:
	DD	2
	DD	$LN6@getGlyph
$LN6@getGlyph:
	DD	-20					; ffffffecH
	DD	4
	DD	$LN4@getGlyph
	DD	-29					; ffffffe3H
	DD	1
	DD	$LN5@getGlyph
$LN5@getGlyph:
	DB	98					; 00000062H
	DB	105					; 00000069H
	DB	116					; 00000074H
	DB	115					; 00000073H
	DB	80					; 00000050H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	0
$LN4@getGlyph:
	DB	100					; 00000064H
	DB	117					; 00000075H
	DB	109					; 0000006dH
	DB	109					; 0000006dH
	DB	121					; 00000079H
	DB	80					; 00000050H
	DB	105					; 00000069H
	DB	120					; 00000078H
	DB	101					; 00000065H
	DB	108					; 0000006cH
	DB	68					; 00000044H
	DB	97					; 00000061H
	DB	116					; 00000074H
	DB	97					; 00000061H
	DB	80					; 00000050H
	DB	111					; 0000006fH
	DB	105					; 00000069H
	DB	110					; 0000006eH
	DB	116					; 00000074H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
?getGlyph@Font@touchgfx@@UBEPBUGlyphNode@2@G@Z ENDP	; touchgfx::Font::getGlyph
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ??1Font@touchgfx@@UAE@XZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
??1Font@touchgfx@@UAE@XZ PROC				; touchgfx::Font::~Font, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 168
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
	mov	eax, DWORD PTR _this$[ebp]
	mov	DWORD PTR [eax], OFFSET ??_7Font@touchgfx@@6B@
; Line 169
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
??1Font@touchgfx@@UAE@XZ ENDP				; touchgfx::Font::~Font
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?height@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?height@GlyphNode@touchgfx@@QBEGXZ PROC			; touchgfx::GlyphNode::height, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 79
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 80
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 16					; 00000010H
	shl	eax, 4
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+7]
	or	eax, edx
; Line 81
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?height@GlyphNode@touchgfx@@QBEGXZ ENDP			; touchgfx::GlyphNode::height
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
;	COMDAT ?width@GlyphNode@touchgfx@@QBEGXZ
_TEXT	SEGMENT
_this$ = -8						; size = 4
?width@GlyphNode@touchgfx@@QBEGXZ PROC			; touchgfx::GlyphNode::width, COMDAT
; _this$ = ecx
; File G:\Germany\Scanner\Firmware\Display_Board\Middlewares\ST\touchgfx\framework\include\touchgfx\Font.hpp
; Line 69
	push	ebp
	mov	ebp, esp
	sub	esp, 204				; 000000ccH
	push	ebx
	push	esi
	push	edi
	push	ecx
	lea	edi, DWORD PTR [ebp-12]
	mov	ecx, 3
	mov	eax, -858993460				; ccccccccH
	rep stosd
	pop	ecx
	mov	DWORD PTR _this$[ebp], ecx
	mov	ecx, OFFSET __6F04AFDB_Font@hpp
	call	@__CheckForDebuggerJustMyCode@4
; Line 70
	mov	eax, DWORD PTR _this$[ebp]
	movzx	eax, BYTE PTR [eax+13]
	and	eax, 8
	shl	eax, 5
	mov	ecx, DWORD PTR _this$[ebp]
	movzx	edx, BYTE PTR [ecx+6]
	or	eax, edx
; Line 71
	pop	edi
	pop	esi
	pop	ebx
	add	esp, 204				; 000000ccH
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?width@GlyphNode@touchgfx@@QBEGXZ ENDP			; touchgfx::GlyphNode::width
_TEXT	ENDS
END
